directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateMsgChannelInput is used for create MsgChannel object.
Input was generated by ent.
"""
input CreateMsgChannelInput {
  """消息通道名称"""
  name: String!
  """组织ID"""
  tenantID: Int!
  """支持的消息模式:站内信,app推送,邮件,短信,微信等"""
  receiverType: MsgChannelReceiverType!
  """通道配置Json格式"""
  receiver: ReceiverInput
  """备注"""
  comments: String
}
"""
CreateMsgEventInput is used for create MsgEvent object.
Input was generated by ent.
"""
input CreateMsgEventInput {
  """消息事件名称,应用内唯一"""
  name: String!
  """备注"""
  comments: String
  """消息路由配置"""
  route: RouteInput
  """根据route配置对应的以,分隔的mode列表"""
  modes: String!
  msgTypeID: ID!
}
"""
CreateMsgSubscriberInput is used for create MsgSubscriber object.
Input was generated by ent.
"""
input CreateMsgSubscriberInput {
  """组织ID"""
  tenantID: Int!
  """用户组ID"""
  orgRoleID: Int
  """是否排除"""
  exclude: Boolean
  msgTypeID: ID!
  userID: ID
}
"""
CreateMsgTemplateInput is used for create MsgTemplate object.
Input was generated by ent.
"""
input CreateMsgTemplateInput {
  """应用消息类型ID"""
  msgTypeID: Int!
  """组织ID"""
  tenantID: Int!
  """消息模板名称"""
  name: String!
  """消息模式:站内信,app推送,邮件,短信,微信等"""
  receiverType: MsgTemplateReceiverType!
  """消息类型:文本,网页,需要结合mod确定支持的格式"""
  format: MsgTemplateFormat!
  """标题"""
  subject: String
  """发件人"""
  from: String
  """收件人"""
  to: String
  """抄送"""
  cc: String
  """密送"""
  bcc: String
  """消息体"""
  body: String
  """模板地址"""
  tpl: String
  """附件地址,多个附件用逗号分隔"""
  attachments: String
  """备注"""
  comments: String
  eventID: ID!
}
"""
CreateMsgTypeInput is used for create MsgType object.
Input was generated by ent.
"""
input CreateMsgTypeInput {
  """应用ID"""
  appID: Int
  """消息类型分类"""
  category: String!
  """消息类型名称,应用内唯一"""
  name: String!
  """状态"""
  status: MsgTypeSimpleStatus
  """备注"""
  comments: String
  """是否可订阅"""
  canSubs: Boolean
  """是否可定制"""
  canCustom: Boolean
}
"""
CreateSilenceInput is used for create Silence object.
Input was generated by ent.
"""
input CreateSilenceInput {
  """应用ID"""
  matchers: [MatcherInput!]
  """开始时间"""
  startsAt: Time!
  """结束时间"""
  endsAt: Time!
  """备注"""
  comments: String
  userID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""An object with an Global ID,for using in Noder interface."""
scalar GID
type MsgChannel implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """消息通道名称"""
  name: String!
  """组织ID"""
  tenantID: Int!
  """支持的消息模式:站内信,app推送,邮件,短信,微信等"""
  receiverType: MsgChannelReceiverType!
  """状态"""
  status: MsgChannelSimpleStatus
  """通道配置Json格式"""
  receiver: Receiver
  """备注"""
  comments: String
}
"""A connection to a list of items."""
type MsgChannelConnection {
  """A list of edges."""
  edges: [MsgChannelEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type MsgChannelEdge {
  """The item at the end of the edge."""
  node: MsgChannel
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for MsgChannel connections"""
input MsgChannelOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order MsgChannels."""
  field: MsgChannelOrderField!
}
"""Properties by which MsgChannel connections can be ordered."""
enum MsgChannelOrderField {
  createdAt
}
"""MsgChannelReceiverType is enum for the field receiver_type"""
enum MsgChannelReceiverType @goModel(model: "github.com/woocoos/msgcenter/pkg/profile.ReceiverType") {
  email
  webhook
}
"""MsgChannelSimpleStatus is enum for the field status"""
enum MsgChannelSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
MsgChannelWhereInput is used for filtering MsgChannel objects.
Input was generated by ent.
"""
input MsgChannelWhereInput {
  not: MsgChannelWhereInput
  and: [MsgChannelWhereInput!]
  or: [MsgChannelWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """tenant_id field predicates"""
  tenantID: Int
  tenantIDNEQ: Int
  tenantIDIn: [Int!]
  tenantIDNotIn: [Int!]
  tenantIDGT: Int
  tenantIDGTE: Int
  tenantIDLT: Int
  tenantIDLTE: Int
  """receiver_type field predicates"""
  receiverType: MsgChannelReceiverType
  receiverTypeNEQ: MsgChannelReceiverType
  receiverTypeIn: [MsgChannelReceiverType!]
  receiverTypeNotIn: [MsgChannelReceiverType!]
  """status field predicates"""
  status: MsgChannelSimpleStatus
  statusNEQ: MsgChannelSimpleStatus
  statusIn: [MsgChannelSimpleStatus!]
  statusNotIn: [MsgChannelSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """comments field predicates"""
  comments: String
  commentsNEQ: String
  commentsIn: [String!]
  commentsNotIn: [String!]
  commentsGT: String
  commentsGTE: String
  commentsLT: String
  commentsLTE: String
  commentsContains: String
  commentsHasPrefix: String
  commentsHasSuffix: String
  commentsIsNil: Boolean
  commentsNotNil: Boolean
  commentsEqualFold: String
  commentsContainsFold: String
}
type MsgEvent implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """消息类型ID"""
  msgTypeID: ID!
  """消息事件名称,应用内唯一"""
  name: String!
  """状态"""
  status: MsgEventSimpleStatus
  """备注"""
  comments: String
  """消息路由配置"""
  route: Route
  """根据route配置对应的以,分隔的mode列表"""
  modes: String!
  """消息类型"""
  msgType: MsgType!
  """自定义的消息模板"""
  customerTemplate: [MsgTemplate!]
}
"""A connection to a list of items."""
type MsgEventConnection {
  """A list of edges."""
  edges: [MsgEventEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type MsgEventEdge {
  """The item at the end of the edge."""
  node: MsgEvent
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for MsgEvent connections"""
input MsgEventOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order MsgEvents."""
  field: MsgEventOrderField!
}
"""Properties by which MsgEvent connections can be ordered."""
enum MsgEventOrderField {
  createdAt
}
"""MsgEventSimpleStatus is enum for the field status"""
enum MsgEventSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
MsgEventWhereInput is used for filtering MsgEvent objects.
Input was generated by ent.
"""
input MsgEventWhereInput {
  not: MsgEventWhereInput
  and: [MsgEventWhereInput!]
  or: [MsgEventWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """msg_type_id field predicates"""
  msgTypeID: ID
  msgTypeIDNEQ: ID
  msgTypeIDIn: [ID!]
  msgTypeIDNotIn: [ID!]
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """status field predicates"""
  status: MsgEventSimpleStatus
  statusNEQ: MsgEventSimpleStatus
  statusIn: [MsgEventSimpleStatus!]
  statusNotIn: [MsgEventSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """modes field predicates"""
  modes: String
  modesNEQ: String
  modesIn: [String!]
  modesNotIn: [String!]
  modesGT: String
  modesGTE: String
  modesLT: String
  modesLTE: String
  modesContains: String
  modesHasPrefix: String
  modesHasSuffix: String
  modesEqualFold: String
  modesContainsFold: String
  """msg_type edge predicates"""
  hasMsgType: Boolean
  hasMsgTypeWith: [MsgTypeWhereInput!]
  """customer_template edge predicates"""
  hasCustomerTemplate: Boolean
  hasCustomerTemplateWith: [MsgTemplateWhereInput!]
}
type MsgSubscriber implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """应用消息类型ID"""
  msgTypeID: ID!
  """组织ID"""
  tenantID: Int!
  """用户ID"""
  userID: ID
  """用户组ID"""
  orgRoleID: Int
  """是否排除"""
  exclude: Boolean
  msgType: MsgType!
  user: User
}
"""Ordering options for MsgSubscriber connections"""
input MsgSubscriberOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order MsgSubscribers."""
  field: MsgSubscriberOrderField!
}
"""Properties by which MsgSubscriber connections can be ordered."""
enum MsgSubscriberOrderField {
  createdAt
}
"""
MsgSubscriberWhereInput is used for filtering MsgSubscriber objects.
Input was generated by ent.
"""
input MsgSubscriberWhereInput {
  not: MsgSubscriberWhereInput
  and: [MsgSubscriberWhereInput!]
  or: [MsgSubscriberWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """msg_type_id field predicates"""
  msgTypeID: ID
  msgTypeIDNEQ: ID
  msgTypeIDIn: [ID!]
  msgTypeIDNotIn: [ID!]
  """tenant_id field predicates"""
  tenantID: Int
  tenantIDNEQ: Int
  tenantIDIn: [Int!]
  tenantIDNotIn: [Int!]
  tenantIDGT: Int
  tenantIDGTE: Int
  tenantIDLT: Int
  tenantIDLTE: Int
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """org_role_id field predicates"""
  orgRoleID: Int
  orgRoleIDNEQ: Int
  orgRoleIDIn: [Int!]
  orgRoleIDNotIn: [Int!]
  orgRoleIDGT: Int
  orgRoleIDGTE: Int
  orgRoleIDLT: Int
  orgRoleIDLTE: Int
  orgRoleIDIsNil: Boolean
  orgRoleIDNotNil: Boolean
  """exclude field predicates"""
  exclude: Boolean
  excludeNEQ: Boolean
  excludeIsNil: Boolean
  excludeNotNil: Boolean
  """msg_type edge predicates"""
  hasMsgType: Boolean
  hasMsgTypeWith: [MsgTypeWhereInput!]
}
type MsgTemplate implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """应用消息类型ID"""
  msgTypeID: Int!
  """消息事件ID"""
  msgEventID: ID!
  """组织ID"""
  tenantID: Int!
  """消息模板名称"""
  name: String!
  """状态"""
  status: MsgTemplateSimpleStatus
  """消息模式:站内信,app推送,邮件,短信,微信等"""
  receiverType: MsgTemplateReceiverType!
  """消息类型:文本,网页,需要结合mod确定支持的格式"""
  format: MsgTemplateFormat!
  """标题"""
  subject: String
  """发件人"""
  from: String
  """收件人"""
  to: String
  """抄送"""
  cc: String
  """密送"""
  bcc: String
  """消息体"""
  body: String
  """模板地址"""
  tpl: String
  """附件地址,多个附件用逗号分隔"""
  attachments: String
  """备注"""
  comments: String
  event: MsgEvent!
}
"""A connection to a list of items."""
type MsgTemplateConnection {
  """A list of edges."""
  edges: [MsgTemplateEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type MsgTemplateEdge {
  """The item at the end of the edge."""
  node: MsgTemplate
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""MsgTemplateFormat is enum for the field format"""
enum MsgTemplateFormat @goModel(model: "github.com/woocoos/msgcenter/ent/msgtemplate.Format") {
  txt
  html
}
"""Ordering options for MsgTemplate connections"""
input MsgTemplateOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order MsgTemplates."""
  field: MsgTemplateOrderField!
}
"""Properties by which MsgTemplate connections can be ordered."""
enum MsgTemplateOrderField {
  createdAt
}
"""MsgTemplateReceiverType is enum for the field receiver_type"""
enum MsgTemplateReceiverType @goModel(model: "github.com/woocoos/msgcenter/pkg/profile.ReceiverType") {
  email
  webhook
}
"""MsgTemplateSimpleStatus is enum for the field status"""
enum MsgTemplateSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
MsgTemplateWhereInput is used for filtering MsgTemplate objects.
Input was generated by ent.
"""
input MsgTemplateWhereInput {
  not: MsgTemplateWhereInput
  and: [MsgTemplateWhereInput!]
  or: [MsgTemplateWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """msg_type_id field predicates"""
  msgTypeID: Int
  msgTypeIDNEQ: Int
  msgTypeIDIn: [Int!]
  msgTypeIDNotIn: [Int!]
  msgTypeIDGT: Int
  msgTypeIDGTE: Int
  msgTypeIDLT: Int
  msgTypeIDLTE: Int
  """msg_event_id field predicates"""
  msgEventID: ID
  msgEventIDNEQ: ID
  msgEventIDIn: [ID!]
  msgEventIDNotIn: [ID!]
  """tenant_id field predicates"""
  tenantID: Int
  tenantIDNEQ: Int
  tenantIDIn: [Int!]
  tenantIDNotIn: [Int!]
  tenantIDGT: Int
  tenantIDGTE: Int
  tenantIDLT: Int
  tenantIDLTE: Int
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """status field predicates"""
  status: MsgTemplateSimpleStatus
  statusNEQ: MsgTemplateSimpleStatus
  statusIn: [MsgTemplateSimpleStatus!]
  statusNotIn: [MsgTemplateSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """receiver_type field predicates"""
  receiverType: MsgTemplateReceiverType
  receiverTypeNEQ: MsgTemplateReceiverType
  receiverTypeIn: [MsgTemplateReceiverType!]
  receiverTypeNotIn: [MsgTemplateReceiverType!]
  """format field predicates"""
  format: MsgTemplateFormat
  formatNEQ: MsgTemplateFormat
  formatIn: [MsgTemplateFormat!]
  formatNotIn: [MsgTemplateFormat!]
  """subject field predicates"""
  subject: String
  subjectNEQ: String
  subjectIn: [String!]
  subjectNotIn: [String!]
  subjectGT: String
  subjectGTE: String
  subjectLT: String
  subjectLTE: String
  subjectContains: String
  subjectHasPrefix: String
  subjectHasSuffix: String
  subjectIsNil: Boolean
  subjectNotNil: Boolean
  subjectEqualFold: String
  subjectContainsFold: String
  """from field predicates"""
  from: String
  fromNEQ: String
  fromIn: [String!]
  fromNotIn: [String!]
  fromGT: String
  fromGTE: String
  fromLT: String
  fromLTE: String
  fromContains: String
  fromHasPrefix: String
  fromHasSuffix: String
  fromIsNil: Boolean
  fromNotNil: Boolean
  fromEqualFold: String
  fromContainsFold: String
  """to field predicates"""
  to: String
  toNEQ: String
  toIn: [String!]
  toNotIn: [String!]
  toGT: String
  toGTE: String
  toLT: String
  toLTE: String
  toContains: String
  toHasPrefix: String
  toHasSuffix: String
  toIsNil: Boolean
  toNotNil: Boolean
  toEqualFold: String
  toContainsFold: String
  """cc field predicates"""
  cc: String
  ccNEQ: String
  ccIn: [String!]
  ccNotIn: [String!]
  ccGT: String
  ccGTE: String
  ccLT: String
  ccLTE: String
  ccContains: String
  ccHasPrefix: String
  ccHasSuffix: String
  ccIsNil: Boolean
  ccNotNil: Boolean
  ccEqualFold: String
  ccContainsFold: String
  """bcc field predicates"""
  bcc: String
  bccNEQ: String
  bccIn: [String!]
  bccNotIn: [String!]
  bccGT: String
  bccGTE: String
  bccLT: String
  bccLTE: String
  bccContains: String
  bccHasPrefix: String
  bccHasSuffix: String
  bccIsNil: Boolean
  bccNotNil: Boolean
  bccEqualFold: String
  bccContainsFold: String
  """event edge predicates"""
  hasEvent: Boolean
  hasEventWith: [MsgEventWhereInput!]
}
type MsgType implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """应用ID"""
  appID: Int
  """消息类型分类"""
  category: String!
  """消息类型名称,应用内唯一"""
  name: String!
  """状态"""
  status: MsgTypeSimpleStatus
  """备注"""
  comments: String
  """是否可订阅"""
  canSubs: Boolean
  """是否可定制"""
  canCustom: Boolean
  """消息事件"""
  events: [MsgEvent!]
  """订阅者"""
  subscribers: [MsgSubscriber!]
}
"""A connection to a list of items."""
type MsgTypeConnection {
  """A list of edges."""
  edges: [MsgTypeEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type MsgTypeEdge {
  """The item at the end of the edge."""
  node: MsgType
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for MsgType connections"""
input MsgTypeOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order MsgTypes."""
  field: MsgTypeOrderField!
}
"""Properties by which MsgType connections can be ordered."""
enum MsgTypeOrderField {
  createdAt
}
"""MsgTypeSimpleStatus is enum for the field status"""
enum MsgTypeSimpleStatus @goModel(model: "github.com/woocoos/entco/schemax/typex.SimpleStatus") {
  active
  inactive
  processing
}
"""
MsgTypeWhereInput is used for filtering MsgType objects.
Input was generated by ent.
"""
input MsgTypeWhereInput {
  not: MsgTypeWhereInput
  and: [MsgTypeWhereInput!]
  or: [MsgTypeWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: Int
  appIDNEQ: Int
  appIDIn: [Int!]
  appIDNotIn: [Int!]
  appIDGT: Int
  appIDGTE: Int
  appIDLT: Int
  appIDLTE: Int
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  """category field predicates"""
  category: String
  categoryNEQ: String
  categoryIn: [String!]
  categoryNotIn: [String!]
  categoryGT: String
  categoryGTE: String
  categoryLT: String
  categoryLTE: String
  categoryContains: String
  categoryHasPrefix: String
  categoryHasSuffix: String
  categoryEqualFold: String
  categoryContainsFold: String
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """status field predicates"""
  status: MsgTypeSimpleStatus
  statusNEQ: MsgTypeSimpleStatus
  statusIn: [MsgTypeSimpleStatus!]
  statusNotIn: [MsgTypeSimpleStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """can_subs field predicates"""
  canSubs: Boolean
  canSubsNEQ: Boolean
  canSubsIsNil: Boolean
  canSubsNotNil: Boolean
  """can_custom field predicates"""
  canCustom: Boolean
  canCustomNEQ: Boolean
  canCustomIsNil: Boolean
  canCustomNotNil: Boolean
  """events edge predicates"""
  hasEvents: Boolean
  hasEventsWith: [MsgEventWhereInput!]
  """subscribers edge predicates"""
  hasSubscribers: Boolean
  hasSubscribersWith: [MsgSubscriberWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/woocoos/msgcenter/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: GID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [GID!]!
  ): [Node]!
}
type Silence implements Node {
  id: ID!
  createdBy: ID!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  deletedAt: Time
  """应用ID"""
  matchers: [Matcher!]
  """开始时间"""
  startsAt: Time!
  """结束时间"""
  endsAt: Time!
  """备注"""
  comments: String
  """创建人"""
  user: User!
}
"""A connection to a list of items."""
type SilenceConnection {
  """A list of edges."""
  edges: [SilenceEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type SilenceEdge {
  """The item at the end of the edge."""
  node: Silence
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Silence connections"""
input SilenceOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Silences."""
  field: SilenceOrderField!
}
"""Properties by which Silence connections can be ordered."""
enum SilenceOrderField {
  createdAt
}
"""
SilenceWhereInput is used for filtering Silence objects.
Input was generated by ent.
"""
input SilenceWhereInput {
  not: SilenceWhereInput
  and: [SilenceWhereInput!]
  or: [SilenceWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: ID
  createdByNEQ: ID
  createdByIn: [ID!]
  createdByNotIn: [ID!]
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """deleted_at field predicates"""
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """starts_at field predicates"""
  startsAt: Time
  startsAtNEQ: Time
  startsAtIn: [Time!]
  startsAtNotIn: [Time!]
  startsAtGT: Time
  startsAtGTE: Time
  startsAtLT: Time
  startsAtLTE: Time
  """ends_at field predicates"""
  endsAt: Time
  endsAtNEQ: Time
  endsAtIn: [Time!]
  endsAtNotIn: [Time!]
  endsAtGT: Time
  endsAtGTE: Time
  endsAtLT: Time
  endsAtLTE: Time
}
"""The builtin Time type"""
scalar Time
"""
UpdateMsgChannelInput is used for update MsgChannel object.
Input was generated by ent.
"""
input UpdateMsgChannelInput {
  """消息通道名称"""
  name: String
  """组织ID"""
  tenantID: Int
  """支持的消息模式:站内信,app推送,邮件,短信,微信等"""
  receiverType: MsgChannelReceiverType
  """通道配置Json格式"""
  receiver: ReceiverInput
  clearReceiver: Boolean
  """备注"""
  comments: String
  clearComments: Boolean
}
"""
UpdateMsgEventInput is used for update MsgEvent object.
Input was generated by ent.
"""
input UpdateMsgEventInput {
  """消息事件名称,应用内唯一"""
  name: String
  """备注"""
  comments: String
  clearComments: Boolean
  """消息路由配置"""
  route: RouteInput
  clearRoute: Boolean
  """根据route配置对应的以,分隔的mode列表"""
  modes: String
  msgTypeID: ID
}
"""
UpdateMsgSubscriberInput is used for update MsgSubscriber object.
Input was generated by ent.
"""
input UpdateMsgSubscriberInput {
  """组织ID"""
  tenantID: Int
  """用户组ID"""
  orgRoleID: Int
  clearOrgRoleID: Boolean
  """是否排除"""
  exclude: Boolean
  clearExclude: Boolean
  msgTypeID: ID
  userID: ID
  clearUser: Boolean
}
"""
UpdateMsgTemplateInput is used for update MsgTemplate object.
Input was generated by ent.
"""
input UpdateMsgTemplateInput {
  """应用消息类型ID"""
  msgTypeID: Int
  """组织ID"""
  tenantID: Int
  """消息模板名称"""
  name: String
  """消息模式:站内信,app推送,邮件,短信,微信等"""
  receiverType: MsgTemplateReceiverType
  """消息类型:文本,网页,需要结合mod确定支持的格式"""
  format: MsgTemplateFormat
  """标题"""
  subject: String
  clearSubject: Boolean
  """发件人"""
  from: String
  clearFrom: Boolean
  """收件人"""
  to: String
  clearTo: Boolean
  """抄送"""
  cc: String
  clearCc: Boolean
  """密送"""
  bcc: String
  clearBcc: Boolean
  """消息体"""
  body: String
  clearBody: Boolean
  """模板地址"""
  tpl: String
  clearTpl: Boolean
  """附件地址,多个附件用逗号分隔"""
  attachments: String
  clearAttachments: Boolean
  """备注"""
  comments: String
  clearComments: Boolean
  eventID: ID
}
"""
UpdateMsgTypeInput is used for update MsgType object.
Input was generated by ent.
"""
input UpdateMsgTypeInput {
  """应用ID"""
  appID: Int
  clearAppID: Boolean
  """消息类型分类"""
  category: String
  """消息类型名称,应用内唯一"""
  name: String
  """状态"""
  status: MsgTypeSimpleStatus
  clearStatus: Boolean
  """备注"""
  comments: String
  clearComments: Boolean
  """是否可订阅"""
  canSubs: Boolean
  clearCanSubs: Boolean
  """是否可定制"""
  canCustom: Boolean
  clearCanCustom: Boolean
}
"""
UpdateSilenceInput is used for update Silence object.
Input was generated by ent.
"""
input UpdateSilenceInput {
  """应用ID"""
  matchers: [MatcherInput!]
  appendMatchers: [MatcherInput!]
  clearMatchers: Boolean
  """开始时间"""
  startsAt: Time
  """结束时间"""
  endsAt: Time
  """备注"""
  comments: String
  clearComments: Boolean
}
type User implements Node {
  """ID"""
  id: ID!
  """登陆名称"""
  principalName: String!
  """显示名"""
  displayName: String!
  """邮箱"""
  email: String
  """手机"""
  mobile: String
  """静默"""
  silences: [Silence!]
}
