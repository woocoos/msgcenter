/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any; }
  /**  time duration: RFCXXX duration string, e.g. 1h30m  */
  Duration: { input: any; output: any; }
  /** An object with a Global ID,for using in Noder interface. */
  GID: { input: any; output: any; }
  /**  host:port  */
  HostPort: { input: any; output: any; }
  /**  utf8 string  */
  LabelName: { input: any; output: any; }
  /**  map[string]string JSON Raw  */
  MapString: { input: any; output: any; }
  /** The builtin Time type */
  Time: { input: any; output: any; }
};

/**
 * CreateMsgChannelInput is used for create MsgChannel object.
 * Input was generated by ent.
 */
export type CreateMsgChannelInput = {
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 消息通道名称 */
  name: Scalars['String']['input'];
  /** 通道配置Json格式 */
  receiver?: InputMaybe<ReceiverInput>;
  /** 支持的消息模式:站内信,app推送,邮件,短信,微信等 */
  receiverType: MsgChannelReceiverType;
  /** 组织ID */
  tenantID: Scalars['ID']['input'];
};

/**
 * CreateMsgEventInput is used for create MsgEvent object.
 * Input was generated by ent.
 */
export type CreateMsgEventInput = {
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 根据route配置对应的以,分隔的mode列表 */
  modes: Scalars['String']['input'];
  msgTypeID: Scalars['ID']['input'];
  /** 消息事件名称,应用内唯一 */
  name: Scalars['String']['input'];
  /** 消息路由配置 */
  route?: InputMaybe<RouteInput>;
};

/**
 * CreateMsgSubscriberInput is used for create MsgSubscriber object.
 * Input was generated by ent.
 */
export type CreateMsgSubscriberInput = {
  /** 是否排除 */
  exclude?: InputMaybe<Scalars['Boolean']['input']>;
  msgTypeID: Scalars['ID']['input'];
  /** 用户组ID */
  orgRoleID?: InputMaybe<Scalars['ID']['input']>;
  /** 组织ID */
  tenantID: Scalars['ID']['input'];
  userID?: InputMaybe<Scalars['ID']['input']>;
};

/**
 * CreateMsgTemplateInput is used for create MsgTemplate object.
 * Input was generated by ent.
 */
export type CreateMsgTemplateInput = {
  /** 附件地址。key：/msg/att/1/xxx */
  attachments?: InputMaybe<Array<Scalars['String']['input']>>;
  /** 附件ids */
  attachmentsFileIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** 密送 */
  bcc?: InputMaybe<Scalars['String']['input']>;
  /** 消息体 */
  body?: InputMaybe<Scalars['String']['input']>;
  /** 抄送 */
  cc?: InputMaybe<Scalars['String']['input']>;
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  eventID: Scalars['ID']['input'];
  /** 消息类型:文本,网页,需要结合mod确定支持的格式 */
  format: MsgTemplateFormat;
  /** 发件人 */
  from?: InputMaybe<Scalars['String']['input']>;
  /** 应用消息类型ID */
  msgTypeID: Scalars['Int']['input'];
  /** 消息模板名称 */
  name: Scalars['String']['input'];
  /** 消息模式:站内信,app推送,邮件,短信,微信等 */
  receiverType: MsgTemplateReceiverType;
  /** 标题 */
  subject?: InputMaybe<Scalars['String']['input']>;
  /** 组织ID */
  tenantID: Scalars['ID']['input'];
  /** 收件人 */
  to?: InputMaybe<Scalars['String']['input']>;
  /** 模板地址。key：/msg/tpl/temp/1/xxx */
  tpl?: InputMaybe<Scalars['String']['input']>;
  /** 模板地址 */
  tplFileID?: InputMaybe<Scalars['ID']['input']>;
};

/**
 * CreateMsgTypeInput is used for create MsgType object.
 * Input was generated by ent.
 */
export type CreateMsgTypeInput = {
  /** 应用ID */
  appID?: InputMaybe<Scalars['ID']['input']>;
  /** 是否可定制 */
  canCustom?: InputMaybe<Scalars['Boolean']['input']>;
  /** 是否可订阅 */
  canSubs?: InputMaybe<Scalars['Boolean']['input']>;
  /** 消息类型分类 */
  category: Scalars['String']['input'];
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 消息类型名称,应用内唯一 */
  name: Scalars['String']['input'];
  /** 状态 */
  status?: InputMaybe<MsgTypeSimpleStatus>;
};

/**
 * CreateSilenceInput is used for create Silence object.
 * Input was generated by ent.
 */
export type CreateSilenceInput = {
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 结束时间 */
  endsAt: Scalars['Time']['input'];
  /** 应用ID */
  matchers?: InputMaybe<Array<InputMaybe<MatcherInput>>>;
  /** 开始时间 */
  startsAt: Scalars['Time']['input'];
  /** 状态 */
  state?: InputMaybe<SilenceSilenceState>;
  tenantID: Scalars['Int']['input'];
};

export type EmailConfig = {
  __typename?: 'EmailConfig';
  authIdentity: Scalars['String']['output'];
  authPassword: Scalars['String']['output'];
  authSecret: Scalars['String']['output'];
  authType: Scalars['String']['output'];
  authUsername: Scalars['String']['output'];
  from?: Maybe<Scalars['String']['output']>;
  headers?: Maybe<Scalars['MapString']['output']>;
  smartHost: Scalars['HostPort']['output'];
  to: Scalars['String']['output'];
};

export type EmailConfigInput = {
  authIdentity?: InputMaybe<Scalars['String']['input']>;
  authPassword?: InputMaybe<Scalars['String']['input']>;
  authSecret?: InputMaybe<Scalars['String']['input']>;
  authType: Scalars['String']['input'];
  authUsername?: InputMaybe<Scalars['String']['input']>;
  from?: InputMaybe<Scalars['String']['input']>;
  headers?: InputMaybe<Scalars['MapString']['input']>;
  smartHost: Scalars['HostPort']['input'];
  to: Scalars['String']['input'];
};

export enum MatchType {
  /**  =  */
  MatchEqual = 'MatchEqual',
  /**  !=  */
  MatchNotEqual = 'MatchNotEqual',
  /**  !~  */
  MatchNotRegexp = 'MatchNotRegexp',
  /**  =~  */
  MatchRegexp = 'MatchRegexp'
}

export type Matcher = {
  __typename?: 'Matcher';
  name: Scalars['String']['output'];
  type: MatchType;
  value: Scalars['String']['output'];
};

export type MatcherInput = {
  name: Scalars['String']['input'];
  type: MatchType;
  value: Scalars['String']['input'];
};

/** SubscriptionAction is a generic type for all subscription actions */
export type Message = {
  __typename?: 'Message';
  content: Scalars['String']['output'];
  extras: Scalars['MapString']['output'];
  format: Scalars['String']['output'];
  sendAt: Scalars['Time']['output'];
  title: Scalars['String']['output'];
  topic: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type MessageConfig = {
  __typename?: 'MessageConfig';
  redirect?: Maybe<Scalars['String']['output']>;
  subject?: Maybe<Scalars['String']['output']>;
  to?: Maybe<Scalars['String']['output']>;
};

export type MessageConfigInput = {
  redirect?: InputMaybe<Scalars['String']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
  to?: InputMaybe<Scalars['String']['input']>;
};

/** MessageFilter is a generic type for all subscription filters */
export type MessageFilter = {
  __typename?: 'MessageFilter';
  appCode: Scalars['String']['output'];
  deviceId: Scalars['String']['output'];
  tenantId: Scalars['ID']['output'];
  userId: Scalars['ID']['output'];
};

export type MsgAlert = Node & {
  __typename?: 'MsgAlert';
  /** 注解 */
  annotations?: Maybe<Scalars['MapString']['output']>;
  createdAt: Scalars['Time']['output'];
  /** 是否移除 */
  deleted: Scalars['Boolean']['output'];
  /** 结束时间 */
  endsAt?: Maybe<Scalars['Time']['output']>;
  /** 指纹hash值 */
  fingerprint: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  /** 标签 */
  labels?: Maybe<Scalars['MapString']['output']>;
  nlog: NlogConnection;
  nlogAlerts?: Maybe<Array<NlogAlert>>;
  /** 开始时间 */
  startsAt: Scalars['Time']['output'];
  /** 通知状态,firing: 触发通知,resolved: 已处理过 */
  state: MsgAlertAlertStatus;
  tenantID: Scalars['Int']['output'];
  /** 状态 */
  timeout: Scalars['Boolean']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  /** generatorURL */
  url?: Maybe<Scalars['String']['output']>;
};


export type MsgAlertNlogArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<NlogOrder>;
  where?: InputMaybe<NlogWhereInput>;
};

/** MsgAlertAlertStatus is enum for the field state */
export enum MsgAlertAlertStatus {
  Firing = 'firing',
  None = 'none',
  Resolved = 'resolved'
}

/** A connection to a list of items. */
export type MsgAlertConnection = {
  __typename?: 'MsgAlertConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MsgAlertEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MsgAlertEdge = {
  __typename?: 'MsgAlertEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MsgAlert>;
};

/** Ordering options for MsgAlert connections */
export type MsgAlertOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgAlerts. */
  field: MsgAlertOrderField;
};

/** Properties by which MsgAlert connections can be ordered. */
export enum MsgAlertOrderField {
  CreatedAt = 'createdAt'
}

/**
 * MsgAlertWhereInput is used for filtering MsgAlert objects.
 * Input was generated by ent.
 */
export type MsgAlertWhereInput = {
  and?: InputMaybe<Array<MsgAlertWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** deleted field predicates */
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  deletedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** ends_at field predicates */
  endsAt?: InputMaybe<Scalars['Time']['input']>;
  endsAtGT?: InputMaybe<Scalars['Time']['input']>;
  endsAtGTE?: InputMaybe<Scalars['Time']['input']>;
  endsAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endsAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  endsAtLT?: InputMaybe<Scalars['Time']['input']>;
  endsAtLTE?: InputMaybe<Scalars['Time']['input']>;
  endsAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  endsAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endsAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** fingerprint field predicates */
  fingerprint?: InputMaybe<Scalars['String']['input']>;
  fingerprintContains?: InputMaybe<Scalars['String']['input']>;
  fingerprintContainsFold?: InputMaybe<Scalars['String']['input']>;
  fingerprintEqualFold?: InputMaybe<Scalars['String']['input']>;
  fingerprintGT?: InputMaybe<Scalars['String']['input']>;
  fingerprintGTE?: InputMaybe<Scalars['String']['input']>;
  fingerprintHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fingerprintHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fingerprintIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fingerprintLT?: InputMaybe<Scalars['String']['input']>;
  fingerprintLTE?: InputMaybe<Scalars['String']['input']>;
  fingerprintNEQ?: InputMaybe<Scalars['String']['input']>;
  fingerprintNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** nlog edge predicates */
  hasNlog?: InputMaybe<Scalars['Boolean']['input']>;
  /** nlog_alerts edge predicates */
  hasNlogAlerts?: InputMaybe<Scalars['Boolean']['input']>;
  hasNlogAlertsWith?: InputMaybe<Array<NlogAlertWhereInput>>;
  hasNlogWith?: InputMaybe<Array<NlogWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MsgAlertWhereInput>;
  or?: InputMaybe<Array<MsgAlertWhereInput>>;
  /** starts_at field predicates */
  startsAt?: InputMaybe<Scalars['Time']['input']>;
  startsAtGT?: InputMaybe<Scalars['Time']['input']>;
  startsAtGTE?: InputMaybe<Scalars['Time']['input']>;
  startsAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startsAtLT?: InputMaybe<Scalars['Time']['input']>;
  startsAtLTE?: InputMaybe<Scalars['Time']['input']>;
  startsAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  startsAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** state field predicates */
  state?: InputMaybe<MsgAlertAlertStatus>;
  stateIn?: InputMaybe<Array<MsgAlertAlertStatus>>;
  stateNEQ?: InputMaybe<MsgAlertAlertStatus>;
  stateNotIn?: InputMaybe<Array<MsgAlertAlertStatus>>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** timeout field predicates */
  timeout?: InputMaybe<Scalars['Boolean']['input']>;
  timeoutNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** url field predicates */
  url?: InputMaybe<Scalars['String']['input']>;
  urlContains?: InputMaybe<Scalars['String']['input']>;
  urlContainsFold?: InputMaybe<Scalars['String']['input']>;
  urlEqualFold?: InputMaybe<Scalars['String']['input']>;
  urlGT?: InputMaybe<Scalars['String']['input']>;
  urlGTE?: InputMaybe<Scalars['String']['input']>;
  urlHasPrefix?: InputMaybe<Scalars['String']['input']>;
  urlHasSuffix?: InputMaybe<Scalars['String']['input']>;
  urlIn?: InputMaybe<Array<Scalars['String']['input']>>;
  urlIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  urlLT?: InputMaybe<Scalars['String']['input']>;
  urlLTE?: InputMaybe<Scalars['String']['input']>;
  urlNEQ?: InputMaybe<Scalars['String']['input']>;
  urlNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  urlNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MsgChannel = Node & {
  __typename?: 'MsgChannel';
  /** 备注 */
  comments?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  /** 消息通道名称 */
  name: Scalars['String']['output'];
  /** 通道配置Json格式 */
  receiver?: Maybe<Receiver>;
  /** 支持的消息模式:站内信,app推送,邮件,短信,微信等 */
  receiverType: MsgChannelReceiverType;
  /** 状态 */
  status?: Maybe<MsgChannelSimpleStatus>;
  /** 组织ID */
  tenantID: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of items. */
export type MsgChannelConnection = {
  __typename?: 'MsgChannelConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MsgChannelEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MsgChannelEdge = {
  __typename?: 'MsgChannelEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MsgChannel>;
};

/** Ordering options for MsgChannel connections */
export type MsgChannelOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgChannels. */
  field: MsgChannelOrderField;
};

/** Properties by which MsgChannel connections can be ordered. */
export enum MsgChannelOrderField {
  CreatedAt = 'createdAt'
}

/** MsgChannelReceiverType is enum for the field receiver_type */
export enum MsgChannelReceiverType {
  Email = 'email',
  Message = 'message',
  Webhook = 'webhook'
}

/** MsgChannelSimpleStatus is enum for the field status */
export enum MsgChannelSimpleStatus {
  Active = 'active',
  Inactive = 'inactive',
  Processing = 'processing'
}

/**
 * MsgChannelWhereInput is used for filtering MsgChannel objects.
 * Input was generated by ent.
 */
export type MsgChannelWhereInput = {
  and?: InputMaybe<Array<MsgChannelWhereInput>>;
  /** comments field predicates */
  comments?: InputMaybe<Scalars['String']['input']>;
  commentsContains?: InputMaybe<Scalars['String']['input']>;
  commentsContainsFold?: InputMaybe<Scalars['String']['input']>;
  commentsEqualFold?: InputMaybe<Scalars['String']['input']>;
  commentsGT?: InputMaybe<Scalars['String']['input']>;
  commentsGTE?: InputMaybe<Scalars['String']['input']>;
  commentsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  commentsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  commentsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  commentsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLT?: InputMaybe<Scalars['String']['input']>;
  commentsLTE?: InputMaybe<Scalars['String']['input']>;
  commentsNEQ?: InputMaybe<Scalars['String']['input']>;
  commentsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  commentsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<MsgChannelWhereInput>;
  or?: InputMaybe<Array<MsgChannelWhereInput>>;
  /** receiver_type field predicates */
  receiverType?: InputMaybe<MsgChannelReceiverType>;
  receiverTypeIn?: InputMaybe<Array<MsgChannelReceiverType>>;
  receiverTypeNEQ?: InputMaybe<MsgChannelReceiverType>;
  receiverTypeNotIn?: InputMaybe<Array<MsgChannelReceiverType>>;
  /** status field predicates */
  status?: InputMaybe<MsgChannelSimpleStatus>;
  statusIn?: InputMaybe<Array<MsgChannelSimpleStatus>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusNEQ?: InputMaybe<MsgChannelSimpleStatus>;
  statusNotIn?: InputMaybe<Array<MsgChannelSimpleStatus>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['ID']['input']>;
  tenantIDGT?: InputMaybe<Scalars['ID']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['ID']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['ID']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['ID']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MsgEvent = Node & {
  __typename?: 'MsgEvent';
  /** 备注 */
  comments?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  /** 自定义的消息模板 */
  customerTemplate?: Maybe<Array<MsgTemplate>>;
  id: Scalars['ID']['output'];
  /** 根据route配置对应的以,分隔的mode列表 */
  modes: Scalars['String']['output'];
  /** 消息类型 */
  msgType: MsgType;
  /** 消息类型ID */
  msgTypeID: Scalars['ID']['output'];
  /** 消息事件名称,应用内唯一 */
  name: Scalars['String']['output'];
  /** 消息路由配置 */
  route?: Maybe<Route>;
  routeStr: Scalars['String']['output'];
  /** 状态 */
  status?: Maybe<MsgEventSimpleStatus>;
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
};


export type MsgEventRouteStrArgs = {
  type: RouteStrType;
};

/** A connection to a list of items. */
export type MsgEventConnection = {
  __typename?: 'MsgEventConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MsgEventEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MsgEventEdge = {
  __typename?: 'MsgEventEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MsgEvent>;
};

/** Ordering options for MsgEvent connections */
export type MsgEventOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgEvents. */
  field: MsgEventOrderField;
};

/** Properties by which MsgEvent connections can be ordered. */
export enum MsgEventOrderField {
  CreatedAt = 'createdAt'
}

/** MsgEventSimpleStatus is enum for the field status */
export enum MsgEventSimpleStatus {
  Active = 'active',
  Inactive = 'inactive',
  Processing = 'processing'
}

/**
 * MsgEventWhereInput is used for filtering MsgEvent objects.
 * Input was generated by ent.
 */
export type MsgEventWhereInput = {
  and?: InputMaybe<Array<MsgEventWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** customer_template edge predicates */
  hasCustomerTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  hasCustomerTemplateWith?: InputMaybe<Array<MsgTemplateWhereInput>>;
  /** msg_type edge predicates */
  hasMsgType?: InputMaybe<Scalars['Boolean']['input']>;
  hasMsgTypeWith?: InputMaybe<Array<MsgTypeWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** modes field predicates */
  modes?: InputMaybe<Scalars['String']['input']>;
  modesContains?: InputMaybe<Scalars['String']['input']>;
  modesContainsFold?: InputMaybe<Scalars['String']['input']>;
  modesEqualFold?: InputMaybe<Scalars['String']['input']>;
  modesGT?: InputMaybe<Scalars['String']['input']>;
  modesGTE?: InputMaybe<Scalars['String']['input']>;
  modesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  modesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  modesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  modesLT?: InputMaybe<Scalars['String']['input']>;
  modesLTE?: InputMaybe<Scalars['String']['input']>;
  modesNEQ?: InputMaybe<Scalars['String']['input']>;
  modesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** msg_type_id field predicates */
  msgTypeID?: InputMaybe<Scalars['ID']['input']>;
  msgTypeIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  msgTypeIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  msgTypeIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<MsgEventWhereInput>;
  or?: InputMaybe<Array<MsgEventWhereInput>>;
  /** status field predicates */
  status?: InputMaybe<MsgEventSimpleStatus>;
  statusIn?: InputMaybe<Array<MsgEventSimpleStatus>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusNEQ?: InputMaybe<MsgEventSimpleStatus>;
  statusNotIn?: InputMaybe<Array<MsgEventSimpleStatus>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MsgInternal = Node & {
  __typename?: 'MsgInternal';
  /** 消息体 */
  body?: Maybe<Scalars['String']['output']>;
  /** 消息类型分类 */
  category: Scalars['String']['output'];
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  /** 内容类型: html,txt */
  format: Scalars['String']['output'];
  /** 消息已读的用户数 */
  hasReadCounts: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  msgInternalTo?: Maybe<Array<MsgInternalTo>>;
  /** 消息跳转 */
  redirect?: Maybe<Scalars['String']['output']>;
  /** 标题 */
  subject: Scalars['String']['output'];
  tenantID: Scalars['Int']['output'];
  /** 消息发送的用户数 */
  toSendCounts: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of items. */
export type MsgInternalConnection = {
  __typename?: 'MsgInternalConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MsgInternalEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MsgInternalEdge = {
  __typename?: 'MsgInternalEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MsgInternal>;
};

/** Ordering options for MsgInternal connections */
export type MsgInternalOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgInternals. */
  field: MsgInternalOrderField;
};

/** Properties by which MsgInternal connections can be ordered. */
export enum MsgInternalOrderField {
  CreatedAt = 'createdAt'
}

export type MsgInternalTo = Node & {
  __typename?: 'MsgInternalTo';
  createdAt: Scalars['Time']['output'];
  /** 删除时间 */
  deleteAt?: Maybe<Scalars['Time']['output']>;
  id: Scalars['ID']['output'];
  msgInternal: MsgInternal;
  /** 站内信ID */
  msgInternalID: Scalars['ID']['output'];
  /** 阅读时间 */
  readAt?: Maybe<Scalars['Time']['output']>;
  tenantID: Scalars['Int']['output'];
  user: User;
  /** 用户ID */
  userID: Scalars['ID']['output'];
};

/** A connection to a list of items. */
export type MsgInternalToConnection = {
  __typename?: 'MsgInternalToConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MsgInternalToEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MsgInternalToEdge = {
  __typename?: 'MsgInternalToEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MsgInternalTo>;
};

/** Ordering options for MsgInternalTo connections */
export type MsgInternalToOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgInternalTos. */
  field: MsgInternalToOrderField;
};

/** Properties by which MsgInternalTo connections can be ordered. */
export enum MsgInternalToOrderField {
  CreatedAt = 'createdAt'
}

/**
 * MsgInternalToWhereInput is used for filtering MsgInternalTo objects.
 * Input was generated by ent.
 */
export type MsgInternalToWhereInput = {
  and?: InputMaybe<Array<MsgInternalToWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** delete_at field predicates */
  deleteAt?: InputMaybe<Scalars['Time']['input']>;
  deleteAtGT?: InputMaybe<Scalars['Time']['input']>;
  deleteAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deleteAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deleteAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deleteAtLT?: InputMaybe<Scalars['Time']['input']>;
  deleteAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deleteAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deleteAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deleteAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** msg_internal edge predicates */
  hasMsgInternal?: InputMaybe<Scalars['Boolean']['input']>;
  hasMsgInternalWith?: InputMaybe<Array<MsgInternalWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** msg_internal_id field predicates */
  msgInternalID?: InputMaybe<Scalars['ID']['input']>;
  msgInternalIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  msgInternalIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  msgInternalIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MsgInternalToWhereInput>;
  or?: InputMaybe<Array<MsgInternalToWhereInput>>;
  /** read_at field predicates */
  readAt?: InputMaybe<Scalars['Time']['input']>;
  readAtGT?: InputMaybe<Scalars['Time']['input']>;
  readAtGTE?: InputMaybe<Scalars['Time']['input']>;
  readAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  readAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  readAtLT?: InputMaybe<Scalars['Time']['input']>;
  readAtLTE?: InputMaybe<Scalars['Time']['input']>;
  readAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  readAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  readAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['ID']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
};

/**
 * MsgInternalWhereInput is used for filtering MsgInternal objects.
 * Input was generated by ent.
 */
export type MsgInternalWhereInput = {
  and?: InputMaybe<Array<MsgInternalWhereInput>>;
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>;
  categoryContains?: InputMaybe<Scalars['String']['input']>;
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryGT?: InputMaybe<Scalars['String']['input']>;
  categoryGTE?: InputMaybe<Scalars['String']['input']>;
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryLT?: InputMaybe<Scalars['String']['input']>;
  categoryLTE?: InputMaybe<Scalars['String']['input']>;
  categoryNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** format field predicates */
  format?: InputMaybe<Scalars['String']['input']>;
  formatContains?: InputMaybe<Scalars['String']['input']>;
  formatContainsFold?: InputMaybe<Scalars['String']['input']>;
  formatEqualFold?: InputMaybe<Scalars['String']['input']>;
  formatGT?: InputMaybe<Scalars['String']['input']>;
  formatGTE?: InputMaybe<Scalars['String']['input']>;
  formatHasPrefix?: InputMaybe<Scalars['String']['input']>;
  formatHasSuffix?: InputMaybe<Scalars['String']['input']>;
  formatIn?: InputMaybe<Array<Scalars['String']['input']>>;
  formatLT?: InputMaybe<Scalars['String']['input']>;
  formatLTE?: InputMaybe<Scalars['String']['input']>;
  formatNEQ?: InputMaybe<Scalars['String']['input']>;
  formatNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** msg_internal_to edge predicates */
  hasMsgInternalTo?: InputMaybe<Scalars['Boolean']['input']>;
  hasMsgInternalToWith?: InputMaybe<Array<MsgInternalToWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MsgInternalWhereInput>;
  or?: InputMaybe<Array<MsgInternalWhereInput>>;
  /** redirect field predicates */
  redirect?: InputMaybe<Scalars['String']['input']>;
  redirectContains?: InputMaybe<Scalars['String']['input']>;
  redirectContainsFold?: InputMaybe<Scalars['String']['input']>;
  redirectEqualFold?: InputMaybe<Scalars['String']['input']>;
  redirectGT?: InputMaybe<Scalars['String']['input']>;
  redirectGTE?: InputMaybe<Scalars['String']['input']>;
  redirectHasPrefix?: InputMaybe<Scalars['String']['input']>;
  redirectHasSuffix?: InputMaybe<Scalars['String']['input']>;
  redirectIn?: InputMaybe<Array<Scalars['String']['input']>>;
  redirectIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  redirectLT?: InputMaybe<Scalars['String']['input']>;
  redirectLTE?: InputMaybe<Scalars['String']['input']>;
  redirectNEQ?: InputMaybe<Scalars['String']['input']>;
  redirectNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  redirectNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** subject field predicates */
  subject?: InputMaybe<Scalars['String']['input']>;
  subjectContains?: InputMaybe<Scalars['String']['input']>;
  subjectContainsFold?: InputMaybe<Scalars['String']['input']>;
  subjectEqualFold?: InputMaybe<Scalars['String']['input']>;
  subjectGT?: InputMaybe<Scalars['String']['input']>;
  subjectGTE?: InputMaybe<Scalars['String']['input']>;
  subjectHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subjectHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subjectIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subjectLT?: InputMaybe<Scalars['String']['input']>;
  subjectLTE?: InputMaybe<Scalars['String']['input']>;
  subjectNEQ?: InputMaybe<Scalars['String']['input']>;
  subjectNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MsgSubscriber = Node & {
  __typename?: 'MsgSubscriber';
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  /** 是否排除 */
  exclude?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  msgType: MsgType;
  /** 应用消息类型ID */
  msgTypeID: Scalars['ID']['output'];
  /** 用户组ID */
  orgRoleID?: Maybe<Scalars['ID']['output']>;
  /** 组织ID */
  tenantID: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
  user?: Maybe<User>;
  /** 用户ID */
  userID?: Maybe<Scalars['ID']['output']>;
};

/** Ordering options for MsgSubscriber connections */
export type MsgSubscriberOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgSubscribers. */
  field: MsgSubscriberOrderField;
};

/** Properties by which MsgSubscriber connections can be ordered. */
export enum MsgSubscriberOrderField {
  CreatedAt = 'createdAt'
}

/**
 * MsgSubscriberWhereInput is used for filtering MsgSubscriber objects.
 * Input was generated by ent.
 */
export type MsgSubscriberWhereInput = {
  and?: InputMaybe<Array<MsgSubscriberWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** exclude field predicates */
  exclude?: InputMaybe<Scalars['Boolean']['input']>;
  excludeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  excludeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  excludeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** msg_type edge predicates */
  hasMsgType?: InputMaybe<Scalars['Boolean']['input']>;
  hasMsgTypeWith?: InputMaybe<Array<MsgTypeWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** msg_type_id field predicates */
  msgTypeID?: InputMaybe<Scalars['ID']['input']>;
  msgTypeIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  msgTypeIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  msgTypeIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MsgSubscriberWhereInput>;
  or?: InputMaybe<Array<MsgSubscriberWhereInput>>;
  /** org_role_id field predicates */
  orgRoleID?: InputMaybe<Scalars['ID']['input']>;
  orgRoleIDGT?: InputMaybe<Scalars['ID']['input']>;
  orgRoleIDGTE?: InputMaybe<Scalars['ID']['input']>;
  orgRoleIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  orgRoleIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  orgRoleIDLT?: InputMaybe<Scalars['ID']['input']>;
  orgRoleIDLTE?: InputMaybe<Scalars['ID']['input']>;
  orgRoleIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  orgRoleIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  orgRoleIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['ID']['input']>;
  tenantIDGT?: InputMaybe<Scalars['ID']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['ID']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['ID']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['ID']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['ID']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MsgTemplate = Node & {
  __typename?: 'MsgTemplate';
  /** 附件地址。key：/msg/att/1/xxx */
  attachments?: Maybe<Array<Scalars['String']['output']>>;
  /** 附件ids */
  attachmentsFileIds?: Maybe<Array<Scalars['ID']['output']>>;
  /** 密送 */
  bcc?: Maybe<Scalars['String']['output']>;
  /** 消息体 */
  body?: Maybe<Scalars['String']['output']>;
  /** 抄送 */
  cc?: Maybe<Scalars['String']['output']>;
  /** 备注 */
  comments?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  event: MsgEvent;
  /** 消息类型:文本,网页,需要结合mod确定支持的格式 */
  format: MsgTemplateFormat;
  /** 发件人 */
  from?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  /** 消息事件ID */
  msgEventID: Scalars['ID']['output'];
  /** 应用消息类型ID */
  msgTypeID: Scalars['Int']['output'];
  /** 消息模板名称 */
  name: Scalars['String']['output'];
  /** 消息模式:站内信,app推送,邮件,短信,微信等 */
  receiverType: MsgTemplateReceiverType;
  /** 状态 */
  status?: Maybe<MsgTemplateSimpleStatus>;
  /** 标题 */
  subject?: Maybe<Scalars['String']['output']>;
  /** 组织ID */
  tenantID: Scalars['ID']['output'];
  /** 收件人 */
  to?: Maybe<Scalars['String']['output']>;
  /** 模板地址。key：/msg/tpl/temp/1/xxx */
  tpl?: Maybe<Scalars['String']['output']>;
  /** 模板地址 */
  tplFileID?: Maybe<Scalars['ID']['output']>;
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of items. */
export type MsgTemplateConnection = {
  __typename?: 'MsgTemplateConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MsgTemplateEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MsgTemplateEdge = {
  __typename?: 'MsgTemplateEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MsgTemplate>;
};

/** MsgTemplateFormat is enum for the field format */
export enum MsgTemplateFormat {
  Html = 'html',
  Txt = 'txt'
}

/** Ordering options for MsgTemplate connections */
export type MsgTemplateOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgTemplates. */
  field: MsgTemplateOrderField;
};

/** Properties by which MsgTemplate connections can be ordered. */
export enum MsgTemplateOrderField {
  CreatedAt = 'createdAt'
}

/** MsgTemplateReceiverType is enum for the field receiver_type */
export enum MsgTemplateReceiverType {
  Email = 'email',
  Message = 'message',
  Webhook = 'webhook'
}

/** MsgTemplateSimpleStatus is enum for the field status */
export enum MsgTemplateSimpleStatus {
  Active = 'active',
  Inactive = 'inactive',
  Processing = 'processing'
}

/**
 * MsgTemplateWhereInput is used for filtering MsgTemplate objects.
 * Input was generated by ent.
 */
export type MsgTemplateWhereInput = {
  and?: InputMaybe<Array<MsgTemplateWhereInput>>;
  /** bcc field predicates */
  bcc?: InputMaybe<Scalars['String']['input']>;
  bccContains?: InputMaybe<Scalars['String']['input']>;
  bccContainsFold?: InputMaybe<Scalars['String']['input']>;
  bccEqualFold?: InputMaybe<Scalars['String']['input']>;
  bccGT?: InputMaybe<Scalars['String']['input']>;
  bccGTE?: InputMaybe<Scalars['String']['input']>;
  bccHasPrefix?: InputMaybe<Scalars['String']['input']>;
  bccHasSuffix?: InputMaybe<Scalars['String']['input']>;
  bccIn?: InputMaybe<Array<Scalars['String']['input']>>;
  bccIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bccLT?: InputMaybe<Scalars['String']['input']>;
  bccLTE?: InputMaybe<Scalars['String']['input']>;
  bccNEQ?: InputMaybe<Scalars['String']['input']>;
  bccNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  bccNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cc field predicates */
  cc?: InputMaybe<Scalars['String']['input']>;
  ccContains?: InputMaybe<Scalars['String']['input']>;
  ccContainsFold?: InputMaybe<Scalars['String']['input']>;
  ccEqualFold?: InputMaybe<Scalars['String']['input']>;
  ccGT?: InputMaybe<Scalars['String']['input']>;
  ccGTE?: InputMaybe<Scalars['String']['input']>;
  ccHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ccHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ccIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ccIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ccLT?: InputMaybe<Scalars['String']['input']>;
  ccLTE?: InputMaybe<Scalars['String']['input']>;
  ccNEQ?: InputMaybe<Scalars['String']['input']>;
  ccNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ccNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** format field predicates */
  format?: InputMaybe<MsgTemplateFormat>;
  formatIn?: InputMaybe<Array<MsgTemplateFormat>>;
  formatNEQ?: InputMaybe<MsgTemplateFormat>;
  formatNotIn?: InputMaybe<Array<MsgTemplateFormat>>;
  /** from field predicates */
  from?: InputMaybe<Scalars['String']['input']>;
  fromContains?: InputMaybe<Scalars['String']['input']>;
  fromContainsFold?: InputMaybe<Scalars['String']['input']>;
  fromEqualFold?: InputMaybe<Scalars['String']['input']>;
  fromGT?: InputMaybe<Scalars['String']['input']>;
  fromGTE?: InputMaybe<Scalars['String']['input']>;
  fromHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fromHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fromIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fromIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  fromLT?: InputMaybe<Scalars['String']['input']>;
  fromLTE?: InputMaybe<Scalars['String']['input']>;
  fromNEQ?: InputMaybe<Scalars['String']['input']>;
  fromNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fromNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event edge predicates */
  hasEvent?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventWith?: InputMaybe<Array<MsgEventWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** msg_event_id field predicates */
  msgEventID?: InputMaybe<Scalars['ID']['input']>;
  msgEventIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  msgEventIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  msgEventIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** msg_type_id field predicates */
  msgTypeID?: InputMaybe<Scalars['Int']['input']>;
  msgTypeIDGT?: InputMaybe<Scalars['Int']['input']>;
  msgTypeIDGTE?: InputMaybe<Scalars['Int']['input']>;
  msgTypeIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  msgTypeIDLT?: InputMaybe<Scalars['Int']['input']>;
  msgTypeIDLTE?: InputMaybe<Scalars['Int']['input']>;
  msgTypeIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  msgTypeIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<MsgTemplateWhereInput>;
  or?: InputMaybe<Array<MsgTemplateWhereInput>>;
  /** receiver_type field predicates */
  receiverType?: InputMaybe<MsgTemplateReceiverType>;
  receiverTypeIn?: InputMaybe<Array<MsgTemplateReceiverType>>;
  receiverTypeNEQ?: InputMaybe<MsgTemplateReceiverType>;
  receiverTypeNotIn?: InputMaybe<Array<MsgTemplateReceiverType>>;
  /** status field predicates */
  status?: InputMaybe<MsgTemplateSimpleStatus>;
  statusIn?: InputMaybe<Array<MsgTemplateSimpleStatus>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusNEQ?: InputMaybe<MsgTemplateSimpleStatus>;
  statusNotIn?: InputMaybe<Array<MsgTemplateSimpleStatus>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** subject field predicates */
  subject?: InputMaybe<Scalars['String']['input']>;
  subjectContains?: InputMaybe<Scalars['String']['input']>;
  subjectContainsFold?: InputMaybe<Scalars['String']['input']>;
  subjectEqualFold?: InputMaybe<Scalars['String']['input']>;
  subjectGT?: InputMaybe<Scalars['String']['input']>;
  subjectGTE?: InputMaybe<Scalars['String']['input']>;
  subjectHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subjectHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subjectIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subjectIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subjectLT?: InputMaybe<Scalars['String']['input']>;
  subjectLTE?: InputMaybe<Scalars['String']['input']>;
  subjectNEQ?: InputMaybe<Scalars['String']['input']>;
  subjectNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subjectNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['ID']['input']>;
  tenantIDGT?: InputMaybe<Scalars['ID']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['ID']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['ID']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['ID']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** to field predicates */
  to?: InputMaybe<Scalars['String']['input']>;
  toContains?: InputMaybe<Scalars['String']['input']>;
  toContainsFold?: InputMaybe<Scalars['String']['input']>;
  toEqualFold?: InputMaybe<Scalars['String']['input']>;
  toGT?: InputMaybe<Scalars['String']['input']>;
  toGTE?: InputMaybe<Scalars['String']['input']>;
  toHasPrefix?: InputMaybe<Scalars['String']['input']>;
  toHasSuffix?: InputMaybe<Scalars['String']['input']>;
  toIn?: InputMaybe<Array<Scalars['String']['input']>>;
  toIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  toLT?: InputMaybe<Scalars['String']['input']>;
  toLTE?: InputMaybe<Scalars['String']['input']>;
  toNEQ?: InputMaybe<Scalars['String']['input']>;
  toNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  toNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MsgType = Node & {
  __typename?: 'MsgType';
  /** 应用ID */
  appID?: Maybe<Scalars['ID']['output']>;
  /** 是否可定制 */
  canCustom?: Maybe<Scalars['Boolean']['output']>;
  /** 是否可订阅 */
  canSubs?: Maybe<Scalars['Boolean']['output']>;
  /** 消息类型分类 */
  category: Scalars['String']['output'];
  /** 备注 */
  comments?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  /** 消息事件 */
  events?: Maybe<Array<MsgEvent>>;
  /**  排除的用户  */
  excludeSubscriberUsers: Array<MsgSubscriber>;
  id: Scalars['ID']['output'];
  /** 消息类型名称,应用内唯一 */
  name: Scalars['String']['output'];
  /** 状态 */
  status?: Maybe<MsgTypeSimpleStatus>;
  /**  订阅的用户组  */
  subscriberRoles: Array<MsgSubscriber>;
  /**  订阅的用户  */
  subscriberUsers: Array<MsgSubscriber>;
  /** 订阅者 */
  subscribers?: Maybe<Array<MsgSubscriber>>;
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of items. */
export type MsgTypeConnection = {
  __typename?: 'MsgTypeConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MsgTypeEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MsgTypeEdge = {
  __typename?: 'MsgTypeEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MsgType>;
};

/** Ordering options for MsgType connections */
export type MsgTypeOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order MsgTypes. */
  field: MsgTypeOrderField;
};

/** Properties by which MsgType connections can be ordered. */
export enum MsgTypeOrderField {
  CreatedAt = 'createdAt'
}

/** MsgTypeSimpleStatus is enum for the field status */
export enum MsgTypeSimpleStatus {
  Active = 'active',
  Inactive = 'inactive',
  Processing = 'processing'
}

/**
 * MsgTypeWhereInput is used for filtering MsgType objects.
 * Input was generated by ent.
 */
export type MsgTypeWhereInput = {
  and?: InputMaybe<Array<MsgTypeWhereInput>>;
  /** app_id field predicates */
  appID?: InputMaybe<Scalars['ID']['input']>;
  appIDGT?: InputMaybe<Scalars['ID']['input']>;
  appIDGTE?: InputMaybe<Scalars['ID']['input']>;
  appIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  appIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  appIDLT?: InputMaybe<Scalars['ID']['input']>;
  appIDLTE?: InputMaybe<Scalars['ID']['input']>;
  appIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  appIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  appIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** can_custom field predicates */
  canCustom?: InputMaybe<Scalars['Boolean']['input']>;
  canCustomIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  canCustomNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  canCustomNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** can_subs field predicates */
  canSubs?: InputMaybe<Scalars['Boolean']['input']>;
  canSubsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  canSubsNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  canSubsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>;
  categoryContains?: InputMaybe<Scalars['String']['input']>;
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryGT?: InputMaybe<Scalars['String']['input']>;
  categoryGTE?: InputMaybe<Scalars['String']['input']>;
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryLT?: InputMaybe<Scalars['String']['input']>;
  categoryLTE?: InputMaybe<Scalars['String']['input']>;
  categoryNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<MsgEventWhereInput>>;
  /** subscribers edge predicates */
  hasSubscribers?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubscribersWith?: InputMaybe<Array<MsgSubscriberWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<MsgTypeWhereInput>;
  or?: InputMaybe<Array<MsgTypeWhereInput>>;
  /** status field predicates */
  status?: InputMaybe<MsgTypeSimpleStatus>;
  statusIn?: InputMaybe<Array<MsgTypeSimpleStatus>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusNEQ?: InputMaybe<MsgTypeSimpleStatus>;
  statusNotIn?: InputMaybe<Array<MsgTypeSimpleStatus>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  /**  创建消息通道  */
  createMsgChannel: MsgChannel;
  /**  创建消息事件  */
  createMsgEvent: MsgEvent;
  /**  消息订阅  */
  createMsgSubscriber: Array<MsgSubscriber>;
  /**  创建消息模板  */
  createMsgTemplate: MsgTemplate;
  /**  创建消息类型  */
  createMsgType: MsgType;
  /**  创建静默  */
  createSilence: Silence;
  /**  删除消息通道  */
  deleteMsgChannel: Scalars['Boolean']['output'];
  /**  删除消息事件  */
  deleteMsgEvent: Scalars['Boolean']['output'];
  /**  删除订阅  */
  deleteMsgSubscriber: Scalars['Boolean']['output'];
  /**  删除消息模板  */
  deleteMsgTemplate: Scalars['Boolean']['output'];
  /**  删除消息类型  */
  deleteMsgType: Scalars['Boolean']['output'];
  /**  删除静默  */
  deleteSilence: Scalars['Boolean']['output'];
  /**  禁用消息通道  */
  disableMsgChannel: MsgChannel;
  /**  禁用消息事件  */
  disableMsgEvent: MsgEvent;
  /**  禁用消息模板  */
  disableMsgTemplate: MsgTemplate;
  /**  启用消息通道  */
  enableMsgChannel: MsgChannel;
  /**  启用消息事件  */
  enableMsgEvent: MsgEvent;
  /**  启用消息模板  */
  enableMsgTemplate: MsgTemplate;
  /**  删除站内信消息  */
  markMsgInternalToDeleted: Scalars['Boolean']['output'];
  /**  设置站内信消息已读未读  */
  markMsgInternalToReadOrUnRead: Scalars['Boolean']['output'];
  /**  测试邮件模板  */
  testSendEmailTpl: Scalars['Boolean']['output'];
  /**  测试站内信模板  */
  testSendMessageTpl: Scalars['Boolean']['output'];
  /**  更新消息通道  */
  updateMsgChannel: MsgChannel;
  /**  更新消息事件  */
  updateMsgEvent: MsgEvent;
  /**  更新消息模板  */
  updateMsgTemplate: MsgTemplate;
  /**  更新消息类型  */
  updateMsgType: MsgType;
  /**  更新静默  */
  updateSilence: Silence;
};


export type MutationCreateMsgChannelArgs = {
  input: CreateMsgChannelInput;
};


export type MutationCreateMsgEventArgs = {
  input: CreateMsgEventInput;
};


export type MutationCreateMsgSubscriberArgs = {
  inputs: Array<CreateMsgSubscriberInput>;
};


export type MutationCreateMsgTemplateArgs = {
  input: CreateMsgTemplateInput;
};


export type MutationCreateMsgTypeArgs = {
  input: CreateMsgTypeInput;
};


export type MutationCreateSilenceArgs = {
  input: CreateSilenceInput;
};


export type MutationDeleteMsgChannelArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteMsgEventArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteMsgSubscriberArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteMsgTemplateArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteMsgTypeArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteSilenceArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDisableMsgChannelArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDisableMsgEventArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDisableMsgTemplateArgs = {
  id: Scalars['ID']['input'];
};


export type MutationEnableMsgChannelArgs = {
  id: Scalars['ID']['input'];
};


export type MutationEnableMsgEventArgs = {
  id: Scalars['ID']['input'];
};


export type MutationEnableMsgTemplateArgs = {
  id: Scalars['ID']['input'];
};


export type MutationMarkMsgInternalToDeletedArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationMarkMsgInternalToReadOrUnReadArgs = {
  ids: Array<Scalars['ID']['input']>;
  read: Scalars['Boolean']['input'];
};


export type MutationTestSendEmailTplArgs = {
  annotations?: InputMaybe<Scalars['MapString']['input']>;
  email: Scalars['String']['input'];
  labels?: InputMaybe<Scalars['MapString']['input']>;
  tplID: Scalars['ID']['input'];
};


export type MutationTestSendMessageTplArgs = {
  annotations?: InputMaybe<Scalars['MapString']['input']>;
  labels?: InputMaybe<Scalars['MapString']['input']>;
  tplID: Scalars['ID']['input'];
  userID: Scalars['ID']['input'];
};


export type MutationUpdateMsgChannelArgs = {
  id: Scalars['ID']['input'];
  input: UpdateMsgChannelInput;
};


export type MutationUpdateMsgEventArgs = {
  id: Scalars['ID']['input'];
  input: UpdateMsgEventInput;
};


export type MutationUpdateMsgTemplateArgs = {
  id: Scalars['ID']['input'];
  input: UpdateMsgTemplateInput;
};


export type MutationUpdateMsgTypeArgs = {
  id: Scalars['ID']['input'];
  input: UpdateMsgTypeInput;
};


export type MutationUpdateSilenceArgs = {
  id: Scalars['ID']['input'];
  input: UpdateSilenceInput;
};

export type Nlog = Node & {
  __typename?: 'Nlog';
  alerts?: Maybe<Array<MsgAlert>>;
  createdAt: Scalars['Time']['output'];
  /** 过期时间 */
  expiresAt: Scalars['Time']['output'];
  /** 分组键 */
  groupKey: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  /** 通道的索引位置 */
  idx: Scalars['Int']['output'];
  nlogAlert?: Maybe<Array<NlogAlert>>;
  /** 接收组名称 */
  receiver: Scalars['String']['output'];
  /** 支持的消息模式:站内信,app推送,邮件,短信,微信等 */
  receiverType: NlogReceiverType;
  /** 发送时间 */
  sendAt: Scalars['Time']['output'];
  tenantID: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
};

export type NlogAlert = Node & {
  __typename?: 'NlogAlert';
  alert: MsgAlert;
  /** alert id */
  alertID: Scalars['ID']['output'];
  createdAt: Scalars['Time']['output'];
  id: Scalars['ID']['output'];
  nlog: Nlog;
  /** nlog id */
  nlogID: Scalars['ID']['output'];
};

/** Ordering options for NlogAlert connections */
export type NlogAlertOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order NlogAlerts. */
  field: NlogAlertOrderField;
};

/** Properties by which NlogAlert connections can be ordered. */
export enum NlogAlertOrderField {
  CreatedAt = 'createdAt'
}

/**
 * NlogAlertWhereInput is used for filtering NlogAlert objects.
 * Input was generated by ent.
 */
export type NlogAlertWhereInput = {
  and?: InputMaybe<Array<NlogAlertWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<NlogAlertWhereInput>;
  or?: InputMaybe<Array<NlogAlertWhereInput>>;
};

/** A connection to a list of items. */
export type NlogConnection = {
  __typename?: 'NlogConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<NlogEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type NlogEdge = {
  __typename?: 'NlogEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Nlog>;
};

/** Ordering options for Nlog connections */
export type NlogOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Nlogs. */
  field: NlogOrderField;
};

/** Properties by which Nlog connections can be ordered. */
export enum NlogOrderField {
  CreatedAt = 'createdAt'
}

/** NlogReceiverType is enum for the field receiver_type */
export enum NlogReceiverType {
  Email = 'email',
  Message = 'message',
  Webhook = 'webhook'
}

/**
 * NlogWhereInput is used for filtering Nlog objects.
 * Input was generated by ent.
 */
export type NlogWhereInput = {
  and?: InputMaybe<Array<NlogWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** group_key field predicates */
  groupKey?: InputMaybe<Scalars['String']['input']>;
  groupKeyContains?: InputMaybe<Scalars['String']['input']>;
  groupKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  groupKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  groupKeyGT?: InputMaybe<Scalars['String']['input']>;
  groupKeyGTE?: InputMaybe<Scalars['String']['input']>;
  groupKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  groupKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  groupKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  groupKeyLT?: InputMaybe<Scalars['String']['input']>;
  groupKeyLTE?: InputMaybe<Scalars['String']['input']>;
  groupKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  groupKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** alerts edge predicates */
  hasAlerts?: InputMaybe<Scalars['Boolean']['input']>;
  hasAlertsWith?: InputMaybe<Array<MsgAlertWhereInput>>;
  /** nlog_alert edge predicates */
  hasNlogAlert?: InputMaybe<Scalars['Boolean']['input']>;
  hasNlogAlertWith?: InputMaybe<Array<NlogAlertWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** idx field predicates */
  idx?: InputMaybe<Scalars['Int']['input']>;
  idxGT?: InputMaybe<Scalars['Int']['input']>;
  idxGTE?: InputMaybe<Scalars['Int']['input']>;
  idxIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  idxLT?: InputMaybe<Scalars['Int']['input']>;
  idxLTE?: InputMaybe<Scalars['Int']['input']>;
  idxNEQ?: InputMaybe<Scalars['Int']['input']>;
  idxNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  not?: InputMaybe<NlogWhereInput>;
  or?: InputMaybe<Array<NlogWhereInput>>;
  /** receiver field predicates */
  receiver?: InputMaybe<Scalars['String']['input']>;
  receiverContains?: InputMaybe<Scalars['String']['input']>;
  receiverContainsFold?: InputMaybe<Scalars['String']['input']>;
  receiverEqualFold?: InputMaybe<Scalars['String']['input']>;
  receiverGT?: InputMaybe<Scalars['String']['input']>;
  receiverGTE?: InputMaybe<Scalars['String']['input']>;
  receiverHasPrefix?: InputMaybe<Scalars['String']['input']>;
  receiverHasSuffix?: InputMaybe<Scalars['String']['input']>;
  receiverIn?: InputMaybe<Array<Scalars['String']['input']>>;
  receiverLT?: InputMaybe<Scalars['String']['input']>;
  receiverLTE?: InputMaybe<Scalars['String']['input']>;
  receiverNEQ?: InputMaybe<Scalars['String']['input']>;
  receiverNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** receiver_type field predicates */
  receiverType?: InputMaybe<NlogReceiverType>;
  receiverTypeIn?: InputMaybe<Array<NlogReceiverType>>;
  receiverTypeNEQ?: InputMaybe<NlogReceiverType>;
  receiverTypeNotIn?: InputMaybe<Array<NlogReceiverType>>;
  /** send_at field predicates */
  sendAt?: InputMaybe<Scalars['Time']['input']>;
  sendAtGT?: InputMaybe<Scalars['Time']['input']>;
  sendAtGTE?: InputMaybe<Scalars['Time']['input']>;
  sendAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  sendAtLT?: InputMaybe<Scalars['Time']['input']>;
  sendAtLTE?: InputMaybe<Scalars['Time']['input']>;
  sendAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  sendAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

/**
 * An object with an ID.
 * Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
 */
export type Node = {
  /** The id of the object. */
  id: Scalars['ID']['output'];
};

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  Asc = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  Desc = 'DESC'
}

/**
 * Information about pagination in a connection.
 * https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
 */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type Query = {
  __typename?: 'Query';
  /** 消息列表 */
  msgAlerts: MsgAlertConnection;
  /**  消息通道列表  */
  msgChannels: MsgChannelConnection;
  /**  消息事件列表  */
  msgEvents: MsgEventConnection;
  /** 站内信明细查询 */
  msgInternalTos: MsgInternalToConnection;
  /** 站内信查询 */
  msgInternals: MsgInternalConnection;
  /**  消息模板列表  */
  msgTemplates: MsgTemplateConnection;
  /**  消息类型分类  */
  msgTypeCategories: Array<Scalars['String']['output']>;
  /**  消息类型列表  */
  msgTypes: MsgTypeConnection;
  /** Fetches an object given its ID. */
  node?: Maybe<Node>;
  /** Lookup nodes by a list of IDs. */
  nodes: Array<Maybe<Node>>;
  /**  静默消息  */
  silences: SilenceConnection;
  /** 获取用户的站内信 */
  userMsgInternalTos: MsgInternalToConnection;
  /** 用户订阅的消息分类 */
  userSubMsgCategory: Array<Scalars['String']['output']>;
  /** 用户站内信总未读数 */
  userUnreadMsgInternals: Scalars['Int']['output'];
  /** 消息分类站内信未读数 */
  userUnreadMsgInternalsFromMsgCategory: Array<Scalars['Int']['output']>;
};


export type QueryMsgAlertsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgAlertOrder>;
  where?: InputMaybe<MsgAlertWhereInput>;
};


export type QueryMsgChannelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgChannelOrder>;
  where?: InputMaybe<MsgChannelWhereInput>;
};


export type QueryMsgEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgEventOrder>;
  where?: InputMaybe<MsgEventWhereInput>;
};


export type QueryMsgInternalTosArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgInternalToOrder>;
  where?: InputMaybe<MsgInternalToWhereInput>;
};


export type QueryMsgInternalsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgInternalOrder>;
  where?: InputMaybe<MsgInternalWhereInput>;
};


export type QueryMsgTemplatesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgTemplateOrder>;
  where?: InputMaybe<MsgTemplateWhereInput>;
};


export type QueryMsgTypeCategoriesArgs = {
  appID?: InputMaybe<Scalars['ID']['input']>;
  keyword?: InputMaybe<Scalars['String']['input']>;
};


export type QueryMsgTypesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgTypeOrder>;
  where?: InputMaybe<MsgTypeWhereInput>;
};


export type QueryNodeArgs = {
  id: Scalars['GID']['input'];
};


export type QueryNodesArgs = {
  ids: Array<Scalars['GID']['input']>;
};


export type QuerySilencesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<SilenceOrder>;
  where?: InputMaybe<SilenceWhereInput>;
};


export type QueryUserMsgInternalTosArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgInternalToOrder>;
  where?: InputMaybe<MsgInternalToWhereInput>;
};


export type QueryUserUnreadMsgInternalsFromMsgCategoryArgs = {
  categories: Array<Scalars['String']['input']>;
};

export type Receiver = {
  __typename?: 'Receiver';
  emailConfigs?: Maybe<Array<Maybe<EmailConfig>>>;
  messageConfig?: Maybe<MessageConfig>;
  name: Scalars['String']['output'];
};

export type ReceiverInput = {
  emailConfigs?: InputMaybe<Array<InputMaybe<EmailConfigInput>>>;
  messageConfig?: InputMaybe<MessageConfigInput>;
  name: Scalars['String']['input'];
};

export type Route = {
  __typename?: 'Route';
  GroupInterval?: Maybe<Scalars['Duration']['output']>;
  activeTimeIntervals?: Maybe<Array<Scalars['String']['output']>>;
  continue?: Maybe<Scalars['Boolean']['output']>;
  groupBy?: Maybe<Array<Maybe<Scalars['LabelName']['output']>>>;
  groupWait?: Maybe<Scalars['Duration']['output']>;
  matchers?: Maybe<Array<Maybe<Matcher>>>;
  muteTimeIntervals?: Maybe<Array<Scalars['String']['output']>>;
  receiver?: Maybe<Scalars['String']['output']>;
  repeatInterval?: Maybe<Scalars['Duration']['output']>;
  routes?: Maybe<Array<Maybe<Route>>>;
};

export type RouteInput = {
  activeTimeIntervals?: InputMaybe<Array<Scalars['String']['input']>>;
  continue?: InputMaybe<Scalars['Boolean']['input']>;
  groupBy?: InputMaybe<Array<InputMaybe<Scalars['LabelName']['input']>>>;
  groupInterval?: InputMaybe<Scalars['Duration']['input']>;
  groupWait?: InputMaybe<Scalars['Duration']['input']>;
  matchers?: InputMaybe<Array<InputMaybe<MatcherInput>>>;
  muteTimeIntervals?: InputMaybe<Array<Scalars['String']['input']>>;
  receiver?: InputMaybe<Scalars['String']['input']>;
  repeatInterval?: InputMaybe<Scalars['Duration']['input']>;
  routes?: InputMaybe<Array<InputMaybe<RouteInput>>>;
};

export enum RouteStrType {
  Json = 'Json',
  Yaml = 'Yaml'
}

export type Silence = Node & {
  __typename?: 'Silence';
  /** 备注 */
  comments?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['ID']['output'];
  /** 结束时间 */
  endsAt: Scalars['Time']['output'];
  id: Scalars['ID']['output'];
  /** 应用ID */
  matchers?: Maybe<Array<Maybe<Matcher>>>;
  /** 开始时间 */
  startsAt: Scalars['Time']['output'];
  /** 状态 */
  state: SilenceSilenceState;
  tenantID: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
  /** 创建人 */
  user: User;
};

/** A connection to a list of items. */
export type SilenceConnection = {
  __typename?: 'SilenceConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<SilenceEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type SilenceEdge = {
  __typename?: 'SilenceEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Silence>;
};

/** Ordering options for Silence connections */
export type SilenceOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Silences. */
  field: SilenceOrderField;
};

/** Properties by which Silence connections can be ordered. */
export enum SilenceOrderField {
  CreatedAt = 'createdAt'
}

/** SilenceSilenceState is enum for the field state */
export enum SilenceSilenceState {
  Active = 'active',
  Expired = 'expired',
  Pending = 'pending'
}

/**
 * SilenceWhereInput is used for filtering Silence objects.
 * Input was generated by ent.
 */
export type SilenceWhereInput = {
  and?: InputMaybe<Array<SilenceWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['ID']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdByNEQ?: InputMaybe<Scalars['ID']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** ends_at field predicates */
  endsAt?: InputMaybe<Scalars['Time']['input']>;
  endsAtGT?: InputMaybe<Scalars['Time']['input']>;
  endsAtGTE?: InputMaybe<Scalars['Time']['input']>;
  endsAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endsAtLT?: InputMaybe<Scalars['Time']['input']>;
  endsAtLTE?: InputMaybe<Scalars['Time']['input']>;
  endsAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  endsAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<SilenceWhereInput>;
  or?: InputMaybe<Array<SilenceWhereInput>>;
  /** starts_at field predicates */
  startsAt?: InputMaybe<Scalars['Time']['input']>;
  startsAtGT?: InputMaybe<Scalars['Time']['input']>;
  startsAtGTE?: InputMaybe<Scalars['Time']['input']>;
  startsAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startsAtLT?: InputMaybe<Scalars['Time']['input']>;
  startsAtLTE?: InputMaybe<Scalars['Time']['input']>;
  startsAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  startsAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** state field predicates */
  state?: InputMaybe<SilenceSilenceState>;
  stateIn?: InputMaybe<Array<SilenceSilenceState>>;
  stateNEQ?: InputMaybe<SilenceSilenceState>;
  stateNotIn?: InputMaybe<Array<SilenceSilenceState>>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Subscription = {
  __typename?: 'Subscription';
  message?: Maybe<Message>;
};

/**
 * UpdateMsgChannelInput is used for update MsgChannel object.
 * Input was generated by ent.
 */
export type UpdateMsgChannelInput = {
  clearComments?: InputMaybe<Scalars['Boolean']['input']>;
  clearReceiver?: InputMaybe<Scalars['Boolean']['input']>;
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 消息通道名称 */
  name?: InputMaybe<Scalars['String']['input']>;
  /** 通道配置Json格式 */
  receiver?: InputMaybe<ReceiverInput>;
  /** 支持的消息模式:站内信,app推送,邮件,短信,微信等 */
  receiverType?: InputMaybe<MsgChannelReceiverType>;
  /** 组织ID */
  tenantID?: InputMaybe<Scalars['ID']['input']>;
};

/**
 * UpdateMsgEventInput is used for update MsgEvent object.
 * Input was generated by ent.
 */
export type UpdateMsgEventInput = {
  clearComments?: InputMaybe<Scalars['Boolean']['input']>;
  clearRoute?: InputMaybe<Scalars['Boolean']['input']>;
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 根据route配置对应的以,分隔的mode列表 */
  modes?: InputMaybe<Scalars['String']['input']>;
  msgTypeID?: InputMaybe<Scalars['ID']['input']>;
  /** 消息事件名称,应用内唯一 */
  name?: InputMaybe<Scalars['String']['input']>;
  /** 消息路由配置 */
  route?: InputMaybe<RouteInput>;
};

/**
 * UpdateMsgSubscriberInput is used for update MsgSubscriber object.
 * Input was generated by ent.
 */
export type UpdateMsgSubscriberInput = {
  clearExclude?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrgRoleID?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  /** 是否排除 */
  exclude?: InputMaybe<Scalars['Boolean']['input']>;
  msgTypeID?: InputMaybe<Scalars['ID']['input']>;
  /** 用户组ID */
  orgRoleID?: InputMaybe<Scalars['ID']['input']>;
  /** 组织ID */
  tenantID?: InputMaybe<Scalars['ID']['input']>;
  userID?: InputMaybe<Scalars['ID']['input']>;
};

/**
 * UpdateMsgTemplateInput is used for update MsgTemplate object.
 * Input was generated by ent.
 */
export type UpdateMsgTemplateInput = {
  appendAttachments?: InputMaybe<Array<Scalars['String']['input']>>;
  appendAttachmentsFileIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** 附件地址。key：/msg/att/1/xxx */
  attachments?: InputMaybe<Array<Scalars['String']['input']>>;
  /** 附件ids */
  attachmentsFileIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** 密送 */
  bcc?: InputMaybe<Scalars['String']['input']>;
  /** 消息体 */
  body?: InputMaybe<Scalars['String']['input']>;
  /** 抄送 */
  cc?: InputMaybe<Scalars['String']['input']>;
  clearAttachments?: InputMaybe<Scalars['Boolean']['input']>;
  clearAttachmentsFileIds?: InputMaybe<Scalars['Boolean']['input']>;
  clearBcc?: InputMaybe<Scalars['Boolean']['input']>;
  clearBody?: InputMaybe<Scalars['Boolean']['input']>;
  clearCc?: InputMaybe<Scalars['Boolean']['input']>;
  clearComments?: InputMaybe<Scalars['Boolean']['input']>;
  clearFrom?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubject?: InputMaybe<Scalars['Boolean']['input']>;
  clearTo?: InputMaybe<Scalars['Boolean']['input']>;
  clearTpl?: InputMaybe<Scalars['Boolean']['input']>;
  clearTplFileID?: InputMaybe<Scalars['Boolean']['input']>;
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  eventID?: InputMaybe<Scalars['ID']['input']>;
  /** 消息类型:文本,网页,需要结合mod确定支持的格式 */
  format?: InputMaybe<MsgTemplateFormat>;
  /** 发件人 */
  from?: InputMaybe<Scalars['String']['input']>;
  /** 应用消息类型ID */
  msgTypeID?: InputMaybe<Scalars['Int']['input']>;
  /** 消息模板名称 */
  name?: InputMaybe<Scalars['String']['input']>;
  /** 消息模式:站内信,app推送,邮件,短信,微信等 */
  receiverType?: InputMaybe<MsgTemplateReceiverType>;
  /** 标题 */
  subject?: InputMaybe<Scalars['String']['input']>;
  /** 组织ID */
  tenantID?: InputMaybe<Scalars['ID']['input']>;
  /** 收件人 */
  to?: InputMaybe<Scalars['String']['input']>;
  /** 模板地址。key：/msg/tpl/temp/1/xxx */
  tpl?: InputMaybe<Scalars['String']['input']>;
  /** 模板地址 */
  tplFileID?: InputMaybe<Scalars['ID']['input']>;
};

/**
 * UpdateMsgTypeInput is used for update MsgType object.
 * Input was generated by ent.
 */
export type UpdateMsgTypeInput = {
  /** 应用ID */
  appID?: InputMaybe<Scalars['ID']['input']>;
  /** 是否可定制 */
  canCustom?: InputMaybe<Scalars['Boolean']['input']>;
  /** 是否可订阅 */
  canSubs?: InputMaybe<Scalars['Boolean']['input']>;
  /** 消息类型分类 */
  category?: InputMaybe<Scalars['String']['input']>;
  clearAppID?: InputMaybe<Scalars['Boolean']['input']>;
  clearCanCustom?: InputMaybe<Scalars['Boolean']['input']>;
  clearCanSubs?: InputMaybe<Scalars['Boolean']['input']>;
  clearComments?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 消息类型名称,应用内唯一 */
  name?: InputMaybe<Scalars['String']['input']>;
  /** 状态 */
  status?: InputMaybe<MsgTypeSimpleStatus>;
};

/**
 * UpdateSilenceInput is used for update Silence object.
 * Input was generated by ent.
 */
export type UpdateSilenceInput = {
  appendMatchers?: InputMaybe<Array<InputMaybe<MatcherInput>>>;
  clearComments?: InputMaybe<Scalars['Boolean']['input']>;
  clearMatchers?: InputMaybe<Scalars['Boolean']['input']>;
  /** 备注 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 结束时间 */
  endsAt?: InputMaybe<Scalars['Time']['input']>;
  /** 应用ID */
  matchers?: InputMaybe<Array<InputMaybe<MatcherInput>>>;
  /** 开始时间 */
  startsAt?: InputMaybe<Scalars['Time']['input']>;
  /** 状态 */
  state?: InputMaybe<SilenceSilenceState>;
};

export type User = Node & {
  __typename?: 'User';
  /** 显示名 */
  displayName: Scalars['String']['output'];
  /** 邮箱 */
  email?: Maybe<Scalars['String']['output']>;
  /** ID */
  id: Scalars['ID']['output'];
  /** 手机 */
  mobile?: Maybe<Scalars['String']['output']>;
  /** 登陆名称 */
  principalName: Scalars['String']['output'];
  /** 静默 */
  silences?: Maybe<Array<Silence>>;
};

export type MsgChannelListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgChannelOrder>;
  where?: InputMaybe<MsgChannelWhereInput>;
}>;


export type MsgChannelListQuery = { __typename?: 'Query', msgChannels: { __typename?: 'MsgChannelConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgChannelEdge', cursor: any, node?: { __typename?: 'MsgChannel', id: string, name: string, receiverType: MsgChannelReceiverType, tenantID: string, comments?: string | null, status?: MsgChannelSimpleStatus | null, createdAt: any } | null } | null> | null } };

export type MsgChannelInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgChannelInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string, name: string, receiverType: MsgChannelReceiverType, tenantID: string, comments?: string | null, status?: MsgChannelSimpleStatus | null, createdAt: any } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type MsgChannelReceiverInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgChannelReceiverInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string, receiver?: { __typename?: 'Receiver', name: string, emailConfigs?: Array<{ __typename?: 'EmailConfig', authIdentity: string, authPassword: string, authSecret: string, authType: string, authUsername: string, from?: string | null, headers?: any | null, smartHost: any, to: string } | null> | null, messageConfig?: { __typename?: 'MessageConfig', redirect?: string | null, subject?: string | null, to?: string | null } | null } | null } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type CreateMsgChannelMutationVariables = Exact<{
  input: CreateMsgChannelInput;
}>;


export type CreateMsgChannelMutation = { __typename?: 'Mutation', createMsgChannel: { __typename?: 'MsgChannel', id: string } };

export type UpdateMsgChannelMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: UpdateMsgChannelInput;
}>;


export type UpdateMsgChannelMutation = { __typename?: 'Mutation', updateMsgChannel: { __typename?: 'MsgChannel', id: string } };

export type DelMsgChannelMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DelMsgChannelMutation = { __typename?: 'Mutation', deleteMsgChannel: boolean };

export type EnableMsgChannelMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type EnableMsgChannelMutation = { __typename?: 'Mutation', enableMsgChannel: { __typename?: 'MsgChannel', id: string } };

export type DisableMsgChannelMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DisableMsgChannelMutation = { __typename?: 'Mutation', disableMsgChannel: { __typename?: 'MsgChannel', id: string } };

export type MsgEventListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgEventOrder>;
  where?: InputMaybe<MsgEventWhereInput>;
}>;


export type MsgEventListQuery = { __typename?: 'Query', msgEvents: { __typename?: 'MsgEventConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgEventEdge', cursor: any, node?: { __typename?: 'MsgEvent', id: string, name: string, comments?: string | null, status?: MsgEventSimpleStatus | null, createdAt: any, msgTypeID: string, modes: string, msgType: { __typename?: 'MsgType', id: string, category: string, appID?: string | null, name: string } } | null } | null> | null } };

export type MsgEventInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgEventInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string, name: string, comments?: string | null, status?: MsgEventSimpleStatus | null, createdAt: any, msgTypeID: string, modes: string, msgType: { __typename?: 'MsgType', id: string, category: string, appID?: string | null, name: string } } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type MsgEventInfoRouteQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
  type: RouteStrType;
}>;


export type MsgEventInfoRouteQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string, name: string, comments?: string | null, status?: MsgEventSimpleStatus | null, createdAt: any, msgTypeID: string, modes: string, routeStr: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type CreateMsgEventMutationVariables = Exact<{
  input: CreateMsgEventInput;
}>;


export type CreateMsgEventMutation = { __typename?: 'Mutation', createMsgEvent: { __typename?: 'MsgEvent', id: string } };

export type UpdateMsgEventMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: UpdateMsgEventInput;
}>;


export type UpdateMsgEventMutation = { __typename?: 'Mutation', updateMsgEvent: { __typename?: 'MsgEvent', id: string } };

export type DelMsgEventMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DelMsgEventMutation = { __typename?: 'Mutation', deleteMsgEvent: boolean };

export type EnableMsgEventMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type EnableMsgEventMutation = { __typename?: 'Mutation', enableMsgEvent: { __typename?: 'MsgEvent', id: string } };

export type DisableMsgEventMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DisableMsgEventMutation = { __typename?: 'Mutation', disableMsgEvent: { __typename?: 'MsgEvent', id: string } };

export type MsgInternalListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgInternalOrder>;
  where?: InputMaybe<MsgInternalWhereInput>;
}>;


export type MsgInternalListQuery = { __typename?: 'Query', msgInternals: { __typename?: 'MsgInternalConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgInternalEdge', cursor: any, node?: { __typename?: 'MsgInternal', id: string, tenantID: number, createdBy: number, createdAt: any, subject: string, body?: string | null, format: string, redirect?: string | null } | null } | null> | null } };

export type UserMsgInternalListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgInternalToOrder>;
  where?: InputMaybe<MsgInternalToWhereInput>;
}>;


export type UserMsgInternalListQuery = { __typename?: 'Query', userMsgInternalTos: { __typename?: 'MsgInternalToConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgInternalToEdge', cursor: any, node?: { __typename?: 'MsgInternalTo', id: string, msgInternalID: string, createdAt: any, deleteAt?: any | null, readAt?: any | null, userID: string, msgInternal: { __typename?: 'MsgInternal', id: string, tenantID: number, createdBy: number, createdAt: any, subject: string, body?: string | null, format: string, redirect?: string | null, category: string } } | null } | null> | null } };

export type MsgInternalInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgInternalInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string, tenantID: number, createdBy: number, createdAt: any, subject: string, body?: string | null, format: string, redirect?: string | null } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type UserMsgCategoryQueryVariables = Exact<{ [key: string]: never; }>;


export type UserMsgCategoryQuery = { __typename?: 'Query', userSubMsgCategory: Array<string> };

export type UserMsgCategoryNumQueryVariables = Exact<{
  categories: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type UserMsgCategoryNumQuery = { __typename?: 'Query', userUnreadMsgInternalsFromMsgCategory: Array<number> };

export type MsgInternalToInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgInternalToInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string, msgInternalID: string, createdAt: any, deleteAt?: any | null, readAt?: any | null, userID: string, msgInternal: { __typename?: 'MsgInternal', id: string, tenantID: number, createdBy: number, createdAt: any, subject: string, body?: string | null, format: string, redirect?: string | null, category: string } } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type MarkMsgReadMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
  read: Scalars['Boolean']['input'];
}>;


export type MarkMsgReadMutation = { __typename?: 'Mutation', markMsgInternalToReadOrUnRead: boolean };

export type DelMarkMsgMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type DelMarkMsgMutation = { __typename?: 'Mutation', markMsgInternalToDeleted: boolean };

export type SubMsgSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type SubMsgSubscription = { __typename?: 'Subscription', message?: { __typename?: 'Message', content: string, extras: any, format: string, sendAt: any, title: string, url: string } | null };

export type MsgAlertListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgAlertOrder>;
  where?: InputMaybe<MsgAlertWhereInput>;
}>;


export type MsgAlertListQuery = { __typename?: 'Query', msgAlerts: { __typename?: 'MsgAlertConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgAlertEdge', cursor: any, node?: { __typename?: 'MsgAlert', id: string, startsAt: any, endsAt?: any | null, labels?: any | null, annotations?: any | null, state: MsgAlertAlertStatus, timeout: boolean } | null } | null> | null } };

export type MsgAlertLogListQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<NlogOrder>;
  where?: InputMaybe<NlogWhereInput>;
}>;


export type MsgAlertLogListQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string, nlog: { __typename?: 'NlogConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'NlogEdge', cursor: any, node?: { __typename?: 'Nlog', id: string, sendAt: any, expiresAt: any, groupKey: string, receiver: string, receiverType: NlogReceiverType } | null } | null> | null } } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type SilenceListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<SilenceOrder>;
  where?: InputMaybe<SilenceWhereInput>;
}>;


export type SilenceListQuery = { __typename?: 'Query', silences: { __typename?: 'SilenceConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'SilenceEdge', cursor: any, node?: { __typename?: 'Silence', id: string, tenantID: number, comments?: string | null, createdAt: any, startsAt: any, endsAt: any, state: SilenceSilenceState, matchers?: Array<{ __typename?: 'Matcher', type: MatchType, name: string, value: string } | null> | null } | null } | null> | null } };

export type SilenceInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type SilenceInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string, tenantID: number, startsAt: any, endsAt: any, comments?: string | null, state: SilenceSilenceState, matchers?: Array<{ __typename?: 'Matcher', type: MatchType, name: string, value: string } | null> | null } | { __typename?: 'User', id: string } | null };

export type CreateSilenceMutationVariables = Exact<{
  input: CreateSilenceInput;
}>;


export type CreateSilenceMutation = { __typename?: 'Mutation', createSilence: { __typename?: 'Silence', id: string } };

export type UpdateSilenceMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: UpdateSilenceInput;
}>;


export type UpdateSilenceMutation = { __typename?: 'Mutation', updateSilence: { __typename?: 'Silence', id: string } };

export type DelSilenceMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DelSilenceMutation = { __typename?: 'Mutation', deleteSilence: boolean };

export type MsgTemplateListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgTemplateOrder>;
  where?: InputMaybe<MsgTemplateWhereInput>;
}>;


export type MsgTemplateListQuery = { __typename?: 'Query', msgTemplates: { __typename?: 'MsgTemplateConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgTemplateEdge', cursor: any, node?: { __typename?: 'MsgTemplate', id: string, name: string, comments?: string | null, status?: MsgTemplateSimpleStatus | null, createdAt: any, msgTypeID: number, msgEventID: string, tenantID: string, receiverType: MsgTemplateReceiverType, format: MsgTemplateFormat, subject?: string | null, from?: string | null, to?: string | null, cc?: string | null, bcc?: string | null, body?: string | null, tpl?: string | null, attachments?: Array<string> | null } | null } | null> | null } };

export type MsgTemplateInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgTemplateInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string, name: string, comments?: string | null, status?: MsgTemplateSimpleStatus | null, createdAt: any, msgTypeID: number, msgEventID: string, tenantID: string, receiverType: MsgTemplateReceiverType, format: MsgTemplateFormat, subject?: string | null, from?: string | null, to?: string | null, cc?: string | null, bcc?: string | null, body?: string | null, tplFileID?: string | null, attachmentsFileIds?: Array<string> | null, tpl?: string | null, attachments?: Array<string> | null } | { __typename?: 'MsgType', id: string } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type CreateMsgTemplateMutationVariables = Exact<{
  input: CreateMsgTemplateInput;
}>;


export type CreateMsgTemplateMutation = { __typename?: 'Mutation', createMsgTemplate: { __typename?: 'MsgTemplate', id: string } };

export type UpdateMsgTemplateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: UpdateMsgTemplateInput;
}>;


export type UpdateMsgTemplateMutation = { __typename?: 'Mutation', updateMsgTemplate: { __typename?: 'MsgTemplate', id: string } };

export type DelMsgTemplateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DelMsgTemplateMutation = { __typename?: 'Mutation', deleteMsgTemplate: boolean };

export type EnableMsgTemplateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type EnableMsgTemplateMutation = { __typename?: 'Mutation', enableMsgTemplate: { __typename?: 'MsgTemplate', id: string } };

export type DisableMsgTemplateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DisableMsgTemplateMutation = { __typename?: 'Mutation', disableMsgTemplate: { __typename?: 'MsgTemplate', id: string } };

export type TestSendEmailTplMutationVariables = Exact<{
  annotations?: InputMaybe<Scalars['MapString']['input']>;
  email: Scalars['String']['input'];
  labels?: InputMaybe<Scalars['MapString']['input']>;
  tplID: Scalars['ID']['input'];
}>;


export type TestSendEmailTplMutation = { __typename?: 'Mutation', testSendEmailTpl: boolean };

export type TestSendMessageTplMutationVariables = Exact<{
  annotations?: InputMaybe<Scalars['MapString']['input']>;
  userID: Scalars['ID']['input'];
  labels?: InputMaybe<Scalars['MapString']['input']>;
  tplID: Scalars['ID']['input'];
}>;


export type TestSendMessageTplMutation = { __typename?: 'Mutation', testSendMessageTpl: boolean };

export type MsgTypeListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgTypeOrder>;
  where?: InputMaybe<MsgTypeWhereInput>;
}>;


export type MsgTypeListQuery = { __typename?: 'Query', msgTypes: { __typename?: 'MsgTypeConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgTypeEdge', cursor: any, node?: { __typename?: 'MsgType', id: string, name: string, comments?: string | null, appID?: string | null, status?: MsgTypeSimpleStatus | null, category: string, canSubs?: boolean | null, canCustom?: boolean | null, createdAt: any } | null } | null> | null } };

export type MsgTypeInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgTypeInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string, name: string, comments?: string | null, appID?: string | null, status?: MsgTypeSimpleStatus | null, category: string, canSubs?: boolean | null, canCustom?: boolean | null, createdAt: any } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type CreateMsgTypeMutationVariables = Exact<{
  input: CreateMsgTypeInput;
}>;


export type CreateMsgTypeMutation = { __typename?: 'Mutation', createMsgType: { __typename?: 'MsgType', id: string } };

export type UpdateMsgTypeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: UpdateMsgTypeInput;
}>;


export type UpdateMsgTypeMutation = { __typename?: 'Mutation', updateMsgType: { __typename?: 'MsgType', id: string } };

export type DelMsgTypeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DelMsgTypeMutation = { __typename?: 'Mutation', deleteMsgType: boolean };

export type MsgTypeCategoryQueryVariables = Exact<{
  keyword?: InputMaybe<Scalars['String']['input']>;
  appID?: InputMaybe<Scalars['ID']['input']>;
}>;


export type MsgTypeCategoryQuery = { __typename?: 'Query', msgTypeCategories: Array<string> };

export type MsgTypeListAndSubQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MsgTypeOrder>;
  where?: InputMaybe<MsgTypeWhereInput>;
}>;


export type MsgTypeListAndSubQuery = { __typename?: 'Query', msgTypes: { __typename?: 'MsgTypeConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'MsgTypeEdge', cursor: any, node?: { __typename?: 'MsgType', id: string, name: string, category: string, subscriberUsers: Array<{ __typename?: 'MsgSubscriber', id: string, tenantID: string, msgTypeID: string, userID?: string | null }>, subscriberRoles: Array<{ __typename?: 'MsgSubscriber', id: string, tenantID: string, msgTypeID: string, orgRoleID?: string | null }>, excludeSubscriberUsers: Array<{ __typename?: 'MsgSubscriber', id: string, tenantID: string, msgTypeID: string, userID?: string | null }> } | null } | null> | null } };

export type MsgTypeAndSubInfoQueryVariables = Exact<{
  gid: Scalars['GID']['input'];
}>;


export type MsgTypeAndSubInfoQuery = { __typename?: 'Query', node?: { __typename?: 'MsgAlert', id: string } | { __typename?: 'MsgChannel', id: string } | { __typename?: 'MsgEvent', id: string } | { __typename?: 'MsgInternal', id: string } | { __typename?: 'MsgInternalTo', id: string } | { __typename?: 'MsgSubscriber', id: string } | { __typename?: 'MsgTemplate', id: string } | { __typename?: 'MsgType', id: string, name: string, appID?: string | null, category: string, subscriberUsers: Array<{ __typename?: 'MsgSubscriber', id: string, tenantID: string, msgTypeID: string, userID?: string | null }>, subscriberRoles: Array<{ __typename?: 'MsgSubscriber', id: string, tenantID: string, msgTypeID: string, orgRoleID?: string | null }>, excludeSubscriberUsers: Array<{ __typename?: 'MsgSubscriber', id: string, tenantID: string, msgTypeID: string, userID?: string | null }> } | { __typename?: 'Nlog', id: string } | { __typename?: 'NlogAlert', id: string } | { __typename?: 'Silence', id: string } | { __typename?: 'User', id: string } | null };

export type CreateMsgSubscriberMutationVariables = Exact<{
  inputs: Array<CreateMsgSubscriberInput> | CreateMsgSubscriberInput;
}>;


export type CreateMsgSubscriberMutation = { __typename?: 'Mutation', createMsgSubscriber: Array<{ __typename?: 'MsgSubscriber', id: string }> };

export type DeleteMsgSubscriberMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type DeleteMsgSubscriberMutation = { __typename?: 'Mutation', deleteMsgSubscriber: boolean };


export const MsgChannelListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgChannelList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgChannelOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgChannelWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgChannels"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"receiverType"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgChannelListQuery, MsgChannelListQueryVariables>;
export const MsgChannelInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgChannelInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"receiverType"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]}}]} as unknown as DocumentNode<MsgChannelInfoQuery, MsgChannelInfoQueryVariables>;
export const MsgChannelReceiverInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgChannelReceiverInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"receiver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"emailConfigs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authIdentity"}},{"kind":"Field","name":{"kind":"Name","value":"authPassword"}},{"kind":"Field","name":{"kind":"Name","value":"authSecret"}},{"kind":"Field","name":{"kind":"Name","value":"authType"}},{"kind":"Field","name":{"kind":"Name","value":"authUsername"}},{"kind":"Field","name":{"kind":"Name","value":"from"}},{"kind":"Field","name":{"kind":"Name","value":"headers"}},{"kind":"Field","name":{"kind":"Name","value":"smartHost"}},{"kind":"Field","name":{"kind":"Name","value":"to"}}]}},{"kind":"Field","name":{"kind":"Name","value":"messageConfig"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"redirect"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"to"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgChannelReceiverInfoQuery, MsgChannelReceiverInfoQueryVariables>;
export const CreateMsgChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createMsgChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateMsgChannelInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createMsgChannel"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<CreateMsgChannelMutation, CreateMsgChannelMutationVariables>;
export const UpdateMsgChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateMsgChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateMsgChannelInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateMsgChannel"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<UpdateMsgChannelMutation, UpdateMsgChannelMutationVariables>;
export const DelMsgChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"delMsgChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteMsgChannel"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<DelMsgChannelMutation, DelMsgChannelMutationVariables>;
export const EnableMsgChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"enableMsgChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"enableMsgChannel"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<EnableMsgChannelMutation, EnableMsgChannelMutationVariables>;
export const DisableMsgChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"disableMsgChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"disableMsgChannel"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<DisableMsgChannelMutation, DisableMsgChannelMutationVariables>;
export const MsgEventListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgEventList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgEventOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgEventWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"modes"}},{"kind":"Field","name":{"kind":"Name","value":"msgType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"appID"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgEventListQuery, MsgEventListQueryVariables>;
export const MsgEventInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MsgEventInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"modes"}},{"kind":"Field","name":{"kind":"Name","value":"msgType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"appID"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgEventInfoQuery, MsgEventInfoQueryVariables>;
export const MsgEventInfoRouteDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MsgEventInfoRoute"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"type"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RouteStrType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"modes"}},{"kind":"Field","name":{"kind":"Name","value":"routeStr"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"type"},"value":{"kind":"Variable","name":{"kind":"Name","value":"type"}}}]}]}}]}}]}}]} as unknown as DocumentNode<MsgEventInfoRouteQuery, MsgEventInfoRouteQueryVariables>;
export const CreateMsgEventDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createMsgEvent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateMsgEventInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createMsgEvent"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<CreateMsgEventMutation, CreateMsgEventMutationVariables>;
export const UpdateMsgEventDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateMsgEvent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateMsgEventInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateMsgEvent"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<UpdateMsgEventMutation, UpdateMsgEventMutationVariables>;
export const DelMsgEventDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"delMsgEvent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteMsgEvent"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<DelMsgEventMutation, DelMsgEventMutationVariables>;
export const EnableMsgEventDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"enableMsgEvent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"enableMsgEvent"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<EnableMsgEventMutation, EnableMsgEventMutationVariables>;
export const DisableMsgEventDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"disableMsgEvent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"disableMsgEvent"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<DisableMsgEventMutation, DisableMsgEventMutationVariables>;
export const MsgInternalListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgInternalList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgInternalOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgInternalWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgInternals"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"createdBy"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"format"}},{"kind":"Field","name":{"kind":"Name","value":"redirect"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgInternalListQuery, MsgInternalListQueryVariables>;
export const UserMsgInternalListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"userMsgInternalList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgInternalToOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgInternalToWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userMsgInternalTos"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"msgInternalID"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"deleteAt"}},{"kind":"Field","name":{"kind":"Name","value":"readAt"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"msgInternal"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"createdBy"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"format"}},{"kind":"Field","name":{"kind":"Name","value":"redirect"}},{"kind":"Field","name":{"kind":"Name","value":"category"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<UserMsgInternalListQuery, UserMsgInternalListQueryVariables>;
export const MsgInternalInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgInternalInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgInternal"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"createdBy"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"format"}},{"kind":"Field","name":{"kind":"Name","value":"redirect"}}]}}]}}]}}]} as unknown as DocumentNode<MsgInternalInfoQuery, MsgInternalInfoQueryVariables>;
export const UserMsgCategoryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"userMsgCategory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userSubMsgCategory"}}]}}]} as unknown as DocumentNode<UserMsgCategoryQuery, UserMsgCategoryQueryVariables>;
export const UserMsgCategoryNumDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"userMsgCategoryNum"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categories"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userUnreadMsgInternalsFromMsgCategory"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categories"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categories"}}}]}]}}]} as unknown as DocumentNode<UserMsgCategoryNumQuery, UserMsgCategoryNumQueryVariables>;
export const MsgInternalToInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgInternalToInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgInternalTo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"msgInternalID"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"deleteAt"}},{"kind":"Field","name":{"kind":"Name","value":"readAt"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"msgInternal"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"createdBy"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"format"}},{"kind":"Field","name":{"kind":"Name","value":"redirect"}},{"kind":"Field","name":{"kind":"Name","value":"category"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgInternalToInfoQuery, MsgInternalToInfoQueryVariables>;
export const MarkMsgReadDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"markMsgRead"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ids"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"read"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"markMsgInternalToReadOrUnRead"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"ids"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ids"}}},{"kind":"Argument","name":{"kind":"Name","value":"read"},"value":{"kind":"Variable","name":{"kind":"Name","value":"read"}}}]}]}}]} as unknown as DocumentNode<MarkMsgReadMutation, MarkMsgReadMutationVariables>;
export const DelMarkMsgDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"delMarkMsg"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ids"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"markMsgInternalToDeleted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"ids"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ids"}}}]}]}}]} as unknown as DocumentNode<DelMarkMsgMutation, DelMarkMsgMutationVariables>;
export const SubMsgDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"subMsg"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"content"}},{"kind":"Field","name":{"kind":"Name","value":"extras"}},{"kind":"Field","name":{"kind":"Name","value":"format"}},{"kind":"Field","name":{"kind":"Name","value":"sendAt"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]} as unknown as DocumentNode<SubMsgSubscription, SubMsgSubscriptionVariables>;
export const MsgAlertListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgAlertList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgAlertOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgAlertWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgAlerts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"labels"}},{"kind":"Field","name":{"kind":"Name","value":"annotations"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"timeout"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgAlertListQuery, MsgAlertListQueryVariables>;
export const MsgAlertLogListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgAlertLogList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"NlogOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"NlogWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgAlert"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"nlog"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sendAt"}},{"kind":"Field","name":{"kind":"Name","value":"expiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"groupKey"}},{"kind":"Field","name":{"kind":"Name","value":"receiver"}},{"kind":"Field","name":{"kind":"Name","value":"receiverType"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgAlertLogListQuery, MsgAlertLogListQueryVariables>;
export const SilenceListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"silenceList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SilenceOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SilenceWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"silences"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"matchers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SilenceListQuery, SilenceListQueryVariables>;
export const SilenceInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SilenceInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Silence"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"matchers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}}]}}]} as unknown as DocumentNode<SilenceInfoQuery, SilenceInfoQueryVariables>;
export const CreateSilenceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createSilence"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateSilenceInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createSilence"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<CreateSilenceMutation, CreateSilenceMutationVariables>;
export const UpdateSilenceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateSilence"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateSilenceInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateSilence"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<UpdateSilenceMutation, UpdateSilenceMutationVariables>;
export const DelSilenceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"delSilence"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteSilence"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<DelSilenceMutation, DelSilenceMutationVariables>;
export const MsgTemplateListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgTemplateList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgTemplateOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgTemplateWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgTemplates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"msgEventID"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"receiverType"}},{"kind":"Field","name":{"kind":"Name","value":"format"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"from"}},{"kind":"Field","name":{"kind":"Name","value":"to"}},{"kind":"Field","name":{"kind":"Name","value":"cc"}},{"kind":"Field","name":{"kind":"Name","value":"bcc"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"tpl"}},{"kind":"Field","name":{"kind":"Name","value":"attachments"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgTemplateListQuery, MsgTemplateListQueryVariables>;
export const MsgTemplateInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MsgTemplateInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgTemplate"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"msgEventID"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"receiverType"}},{"kind":"Field","name":{"kind":"Name","value":"format"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"from"}},{"kind":"Field","name":{"kind":"Name","value":"to"}},{"kind":"Field","name":{"kind":"Name","value":"cc"}},{"kind":"Field","name":{"kind":"Name","value":"bcc"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"tplFileID"}},{"kind":"Field","name":{"kind":"Name","value":"attachmentsFileIds"}},{"kind":"Field","name":{"kind":"Name","value":"tpl"}},{"kind":"Field","name":{"kind":"Name","value":"attachments"}}]}}]}}]}}]} as unknown as DocumentNode<MsgTemplateInfoQuery, MsgTemplateInfoQueryVariables>;
export const CreateMsgTemplateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createMsgTemplate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateMsgTemplateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createMsgTemplate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<CreateMsgTemplateMutation, CreateMsgTemplateMutationVariables>;
export const UpdateMsgTemplateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateMsgTemplate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateMsgTemplateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateMsgTemplate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<UpdateMsgTemplateMutation, UpdateMsgTemplateMutationVariables>;
export const DelMsgTemplateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"delMsgTemplate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteMsgTemplate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<DelMsgTemplateMutation, DelMsgTemplateMutationVariables>;
export const EnableMsgTemplateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"enableMsgTemplate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"enableMsgTemplate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<EnableMsgTemplateMutation, EnableMsgTemplateMutationVariables>;
export const DisableMsgTemplateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"disableMsgTemplate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"disableMsgTemplate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<DisableMsgTemplateMutation, DisableMsgTemplateMutationVariables>;
export const TestSendEmailTplDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"testSendEmailTpl"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"annotations"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MapString"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"labels"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MapString"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tplID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"testSendEmailTpl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"annotations"},"value":{"kind":"Variable","name":{"kind":"Name","value":"annotations"}}},{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}},{"kind":"Argument","name":{"kind":"Name","value":"labels"},"value":{"kind":"Variable","name":{"kind":"Name","value":"labels"}}},{"kind":"Argument","name":{"kind":"Name","value":"tplID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tplID"}}}]}]}}]} as unknown as DocumentNode<TestSendEmailTplMutation, TestSendEmailTplMutationVariables>;
export const TestSendMessageTplDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"testSendMessageTpl"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"annotations"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MapString"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"labels"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MapString"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tplID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"testSendMessageTpl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"annotations"},"value":{"kind":"Variable","name":{"kind":"Name","value":"annotations"}}},{"kind":"Argument","name":{"kind":"Name","value":"userID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userID"}}},{"kind":"Argument","name":{"kind":"Name","value":"labels"},"value":{"kind":"Variable","name":{"kind":"Name","value":"labels"}}},{"kind":"Argument","name":{"kind":"Name","value":"tplID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tplID"}}}]}]}}]} as unknown as DocumentNode<TestSendMessageTplMutation, TestSendMessageTplMutationVariables>;
export const MsgTypeListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgTypeList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgTypeOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgTypeWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgTypes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"appID"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"canSubs"}},{"kind":"Field","name":{"kind":"Name","value":"canCustom"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgTypeListQuery, MsgTypeListQueryVariables>;
export const MsgTypeInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgTypeInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}},{"kind":"Field","name":{"kind":"Name","value":"appID"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"canSubs"}},{"kind":"Field","name":{"kind":"Name","value":"canCustom"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]}}]} as unknown as DocumentNode<MsgTypeInfoQuery, MsgTypeInfoQueryVariables>;
export const CreateMsgTypeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createMsgType"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateMsgTypeInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createMsgType"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<CreateMsgTypeMutation, CreateMsgTypeMutationVariables>;
export const UpdateMsgTypeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateMsgType"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateMsgTypeInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateMsgType"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<UpdateMsgTypeMutation, UpdateMsgTypeMutationVariables>;
export const DelMsgTypeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"delMsgType"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteMsgType"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<DelMsgTypeMutation, DelMsgTypeMutationVariables>;
export const MsgTypeCategoryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgTypeCategory"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"keyword"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"appID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgTypeCategories"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"keyword"},"value":{"kind":"Variable","name":{"kind":"Name","value":"keyword"}}},{"kind":"Argument","name":{"kind":"Name","value":"appID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"appID"}}}]}]}}]} as unknown as DocumentNode<MsgTypeCategoryQuery, MsgTypeCategoryQueryVariables>;
export const MsgTypeListAndSubDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgTypeListAndSub"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgTypeOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MsgTypeWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"msgTypes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"subscriberUsers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"subscriberRoles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"orgRoleID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"excludeSubscriberUsers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgTypeListAndSubQuery, MsgTypeListAndSubQueryVariables>;
export const MsgTypeAndSubInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"msgTypeAndSubInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MsgType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"appID"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"subscriberUsers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"subscriberRoles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"orgRoleID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"excludeSubscriberUsers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tenantID"}},{"kind":"Field","name":{"kind":"Name","value":"msgTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MsgTypeAndSubInfoQuery, MsgTypeAndSubInfoQueryVariables>;
export const CreateMsgSubscriberDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createMsgSubscriber"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inputs"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateMsgSubscriberInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createMsgSubscriber"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"inputs"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inputs"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<CreateMsgSubscriberMutation, CreateMsgSubscriberMutationVariables>;
export const DeleteMsgSubscriberDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"deleteMsgSubscriber"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ids"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteMsgSubscriber"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"ids"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ids"}}}]}]}}]} as unknown as DocumentNode<DeleteMsgSubscriberMutation, DeleteMsgSubscriberMutationVariables>;