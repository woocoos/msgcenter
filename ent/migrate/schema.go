// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MsgChannelColumns holds the columns for the "msg_channel" table.
	MsgChannelColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 45},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "receiver_type", Type: field.TypeEnum, Enums: []string{"email", "internal", "webhook"}},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"active", "inactive", "processing"}, Default: "inactive"},
		{Name: "receiver", Type: field.TypeJSON, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
	}
	// MsgChannelTable holds the schema information for the "msg_channel" table.
	MsgChannelTable = &schema.Table{
		Name:       "msg_channel",
		Columns:    MsgChannelColumns,
		PrimaryKey: []*schema.Column{MsgChannelColumns[0]},
	}
	// MsgEventColumns holds the columns for the "msg_event" table.
	MsgEventColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 45},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"active", "inactive", "processing"}, Default: "inactive"},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "route", Type: field.TypeJSON, Nullable: true},
		{Name: "modes", Type: field.TypeString},
		{Name: "msg_type_id", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int"}},
	}
	// MsgEventTable holds the schema information for the "msg_event" table.
	MsgEventTable = &schema.Table{
		Name:       "msg_event",
		Columns:    MsgEventColumns,
		PrimaryKey: []*schema.Column{MsgEventColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "msg_event_msg_type_events",
				Columns:    []*schema.Column{MsgEventColumns[10]},
				RefColumns: []*schema.Column{MsgTypeColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MsgSubscriberColumns holds the columns for the "msg_subscriber" table.
	MsgSubscriberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "org_role_id", Type: field.TypeInt, Nullable: true},
		{Name: "exclude", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "msg_type_id", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int"}},
	}
	// MsgSubscriberTable holds the schema information for the "msg_subscriber" table.
	MsgSubscriberTable = &schema.Table{
		Name:       "msg_subscriber",
		Columns:    MsgSubscriberColumns,
		PrimaryKey: []*schema.Column{MsgSubscriberColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "msg_subscriber_user_user",
				Columns:    []*schema.Column{MsgSubscriberColumns[8]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "msg_subscriber_msg_type_subscribers",
				Columns:    []*schema.Column{MsgSubscriberColumns[9]},
				RefColumns: []*schema.Column{MsgTypeColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MsgTemplateColumns holds the columns for the "msg_template" table.
	MsgTemplateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "msg_type_id", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString, Size: 45},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"active", "inactive", "processing"}, Default: "inactive"},
		{Name: "receiver_type", Type: field.TypeEnum, Enums: []string{"email", "internal", "webhook"}},
		{Name: "format", Type: field.TypeEnum, Enums: []string{"txt", "html"}},
		{Name: "subject", Type: field.TypeString, Nullable: true},
		{Name: "from", Type: field.TypeString, Nullable: true},
		{Name: "to", Type: field.TypeString, Nullable: true},
		{Name: "cc", Type: field.TypeString, Nullable: true},
		{Name: "bcc", Type: field.TypeString, Nullable: true},
		{Name: "body", Type: field.TypeString, Nullable: true},
		{Name: "tpl", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "attachments", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "msg_event_id", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int"}},
	}
	// MsgTemplateTable holds the schema information for the "msg_template" table.
	MsgTemplateTable = &schema.Table{
		Name:       "msg_template",
		Columns:    MsgTemplateColumns,
		PrimaryKey: []*schema.Column{MsgTemplateColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "msg_template_msg_event_customer_template",
				Columns:    []*schema.Column{MsgTemplateColumns[20]},
				RefColumns: []*schema.Column{MsgEventColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MsgTypeColumns holds the columns for the "msg_type" table.
	MsgTypeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeInt, Nullable: true},
		{Name: "category", Type: field.TypeString, Size: 20},
		{Name: "name", Type: field.TypeString, Size: 45},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"active", "inactive", "processing"}, Default: "active"},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "can_subs", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "can_custom", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// MsgTypeTable holds the schema information for the "msg_type" table.
	MsgTypeTable = &schema.Table{
		Name:       "msg_type",
		Columns:    MsgTypeColumns,
		PrimaryKey: []*schema.Column{MsgTypeColumns[0]},
	}
	// OrgRoleUserColumns holds the columns for the "org_role_user" table.
	OrgRoleUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "org_role_id", Type: field.TypeInt},
		{Name: "org_user_id", Type: field.TypeInt},
		{Name: "org_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// OrgRoleUserTable holds the schema information for the "org_role_user" table.
	OrgRoleUserTable = &schema.Table{
		Name:       "org_role_user",
		Columns:    OrgRoleUserColumns,
		PrimaryKey: []*schema.Column{OrgRoleUserColumns[0]},
	}
	// MsgSilenceColumns holds the columns for the "msg_silence" table.
	MsgSilenceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "bigint"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "matchers", Type: field.TypeJSON, Nullable: true},
		{Name: "starts_at", Type: field.TypeTime},
		{Name: "ends_at", Type: field.TypeTime},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"expired", "active", "pending"}, Default: "active"},
		{Name: "created_by", Type: field.TypeInt},
	}
	// MsgSilenceTable holds the schema information for the "msg_silence" table.
	MsgSilenceTable = &schema.Table{
		Name:       "msg_silence",
		Columns:    MsgSilenceColumns,
		PrimaryKey: []*schema.Column{MsgSilenceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "msg_silence_user_silences",
				Columns:    []*schema.Column{MsgSilenceColumns[10]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "principal_name", Type: field.TypeString, Unique: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Size: 45},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MsgChannelTable,
		MsgEventTable,
		MsgSubscriberTable,
		MsgTemplateTable,
		MsgTypeTable,
		OrgRoleUserTable,
		MsgSilenceTable,
		UserTable,
	}
)

func init() {
	MsgChannelTable.Annotation = &entsql.Annotation{
		Table: "msg_channel",
	}
	MsgEventTable.ForeignKeys[0].RefTable = MsgTypeTable
	MsgEventTable.Annotation = &entsql.Annotation{
		Table: "msg_event",
	}
	MsgSubscriberTable.ForeignKeys[0].RefTable = UserTable
	MsgSubscriberTable.ForeignKeys[1].RefTable = MsgTypeTable
	MsgSubscriberTable.Annotation = &entsql.Annotation{
		Table: "msg_subscriber",
	}
	MsgTemplateTable.ForeignKeys[0].RefTable = MsgEventTable
	MsgTemplateTable.Annotation = &entsql.Annotation{
		Table: "msg_template",
	}
	MsgTypeTable.Annotation = &entsql.Annotation{
		Table: "msg_type",
	}
	OrgRoleUserTable.Annotation = &entsql.Annotation{
		Table: "org_role_user",
	}
	MsgSilenceTable.ForeignKeys[0].RefTable = UserTable
	MsgSilenceTable.Annotation = &entsql.Annotation{
		Table: "msg_silence",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
